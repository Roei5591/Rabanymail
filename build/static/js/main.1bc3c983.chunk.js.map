{"version":3,"sources":["state/store.ts","helpers/messages.ts","state/action-creators/index.ts","components/styles.ts","hooks/use-actions.ts","components/SearchBar.tsx","hooks/use-typed-selector.ts","components/MyAppBar.tsx","components/TrashIcons.tsx","components/MailListItem.tsx","hooks/use-mail-box.ts","components/MailList.tsx","components/SideMenu.tsx","helpers/search.ts","components/MailPage.tsx","components/ComposeMail.tsx","components/SnackbarError.tsx","components/SnackbarSending.tsx","components/Mail.tsx","components/RabanyMailLogo.tsx","components/SignUp.tsx","components/SignIn.tsx","components/App.tsx","index.tsx","helpers/user.ts","state/action-types/index.ts","state/reducers/UserReducer.ts","state/reducers/MailReducer.ts","state/reducers/ControlReducer.ts","state/reducers/index.ts","state/index.ts"],"names":["store","createStore","reducers","applyMiddleware","thunk","url","fetchAllMailFromServer","mailSize","Axios","method","data","withCredentials","toggleStarOnServer","mailId","toggleIsTrashOnServer","deleteMailOnServer","sendMailFromServer","msg","text","htmlToText","html","markAsReadOnServer","isRead","setDraft","draft","raiseFlag","type","ActionType","SAVE_DRAFT","payload","clearTimer","SET_SEND_TIMER","setLocation","location","SET_LOCATION","setSearchTerm","searchTerm","SEARCH_MAIL","toggleSideBar","TOGGLE_SIDEBAR","openComposeMail","OPEN_COMPOSE_MAIL","closeComposeMail","CLOSE_COMPOSE_MAIL","toggleMailCheckbox","TOGGLE_MALI_CHECKBOX","toggleAllMailCheckbox","mailList","reset","TOGGLE_ALL_MALI_CHECKBOX","login","username","password","dispatch","a","LOGIN","loginSever","LOGIN_SUCCESS","firstChar","LOGIN_FAIL","LOGIN_ERROR","message","getUser","GET_USER","getUserFromServer","GET_USER_COMPLETE","GET_USER_ERROR","logout","LOGOUT","logoutServer","LOGOUT_COMPLETE","LOGOUT_ERROR","fetchInbox","FETCH_INBOX","inbox","FETCH_INBOX_COMPLETE","FETCH_INBOX_ERROR","fetchAllMail","getState","FETCH_ALL_MAIL","mail","length","res","status","allMail","needToUpdate","FETCH_ALL_MAIL_COMPLETE","response","FETCH_ALL_MAIL_ERROR","toggleStar","TOGGLE_STAR","TOGGLE_STAR_ERROR","sendMail","timer","setTimeout","SEND_MAIL","SEND_MAIL_COMPLETE","SEND_MAIL_ERROR","markAsRead","MARK_AS_READ","MARK_AS_READ_ERROR","toggleIsTrash","TOGGLE_IS_TRASH","TOGGLE_IS_TRASH_ERROR","deleteMail","DELETE_MAIL","DELETE_MAIL_ERROR","drawerWidth","styles","makeStyles","theme","drawerWithClose","spacing","root","display","appBar","width","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","paddingTop","paddingLeft","AppBarRight","AppbBarMiddle","flex","search","maxWidth","minWidth","input","iconButton","loc","backgroundColor","useActions","useDispatch","useMemo","bindActionCreators","actionCreators","useStyles","SearchBar","classes","useState","setInput","useEffect","Paper","component","className","IconButton","aria-label","InputBase","placeholder","inputProps","onChange","e","currentTarget","value","useTypedSelector","useSelector","MyAppBar","state","user","open","control","sideBarOpen","anchorEl","setAnchorEl","AppBar","position","clsx","Toolbar","Typography","variant","noWrap","Button","aria-controls","aria-haspopup","onClick","event","Tooltip","title","Avatar","Menu","id","keepMounted","Boolean","onClose","style","margin","fullWidth","color","TrashIcons","isTrash","fontSize","onClickTrash","onClickDelete","MailListItem","hover","setHover","checked","has","_id","handleClickIsRead","MarkAsReadOrUnreadIcon","Checkbox","isStarred","to","textDecoration","onMouseEnter","onMouseLeave","isOutbound","from","subject","moment","created","format","memo","filterMail","filter","includes","useMailBox","reverse","MailList","match","params","mailListId","map","checkAll","Set","refresh","RefreshIconTooltip","size","Array","linkStyle","MenuItem","locationFromArray","toLocaleLowerCase","replaceAll","ListItem","button","handleClick","ListItemIcon","ListItemText","primary","SideMenu","menuArray","Drawer","paper","Divider","index","highlightSearchTerm","searchTermRegExp","parse","newText","MailPage","history","useHistory","find","searchTermReg","restoreLocation","useRef","momentTime","time","fromNow","push","current","ComposeForm","refs","useForm","register","handleSubmit","onSubmit","flag","name","ref","required","target","defaultValue","initialValue","init","resize","min_height","menubar","plugins","onEditorChange","ComposeMail","minimize","setMinimize","console","log","composeForm","prev","marginTop","SnackbarError","React","setOpen","errorMassage","error","Snackbar","autoHideDuration","reason","elevation","severity","SnackbarSending","sending","undoButton","anchorOrigin","vertical","horizontal","action","Fragment","List","composeMail","composeMailOpen","path","exact","Mail","CssBaseline","RabanyMailLogo","src","alt","height","Copyright","align","Date","getFullYear","flexDirection","avatar","palette","secondary","main","form","submit","SignUp","singUpUsername","setSingUpUsername","singUpPassword","setSingUpnPassword","singUpPasswordConfirm","setSingUpPasswordConfirm","undefined","singUpUsernameError","setSingUpUsernameError","singUpPasswordError","setSingUpnPasswordError","singUpPasswordConfirmError","setSingUpPasswordConfirmError","signUpOnServer","preventDefault","trim","registerServer","errors","param","Container","noValidate","Grid","container","item","xs","TextField","label","autoComplete","helperText","justify","Box","mt","alert","marginBottom","minHeight","borderWidth","borderStyle","borderRadius","lineHeight","borderColor","alertText","alignSelf","mozBoxFlex","SignIn","fail","loginUsername","setLoginUsername","loginPassword","setLoginPassword","role","data-testid","autoFocus","App","RabanyMail","ReactDOM","render","document","querySelector","passwordConfirm","initialState","loading","reducer","produce","enableMapSet","findIndex","newToggle","filletedMail","delete","add","clearTimeout","RegExp","combineReducers","userReducer","MailReducer","ControlReducer"],"mappings":"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","file":"static/js/main.1bc3c983.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\n\nexport const store = createStore(\n  reducers,\n  {},\n  applyMiddleware( thunk)\n);\n","import Axios, { AxiosPromise } from 'axios';\r\nimport { Mail } from '../state/Mail';\r\nimport {htmlToText} from 'html-to-text';\r\n\r\n\r\nconst localUrl = \"http://localhost:7777\"\r\nconst serverUrl = \"https://rabany-mail.herokuapp.com\"\r\n\r\nconst url = localUrl;\r\n\r\nexport const fetchInboxFromServer : () => AxiosPromise<Mail[]> = () => {\r\n return Axios({\r\n    method: \"GET\",\r\n    withCredentials: true,\r\n    url: url + \"/messages/inbox\",\r\n})\r\n}\r\n\r\nexport const fetchAllMailFromServer : (mailSize : number) => AxiosPromise<{allMail : Mail[] , needToUpdate : boolean} | string  > = (mailSize : number) => {\r\n    return Axios({\r\n       method: \"POST\",\r\n       data: {mailSize} ,\r\n       withCredentials: true,\r\n       url: url + \"/messages/allmail\",\r\n   })\r\n   }\r\n\r\nexport const toggleStarOnServer  = (mailId: string) => {\r\n    return Axios({\r\n       method: \"POST\",\r\n       data: { mailId : mailId},\r\n       withCredentials: true,\r\n       url: url + \"/messages/starred\",\r\n   })\r\n}\r\n\r\nexport const toggleIsTrashOnServer  = (mailId: string[]) => {\r\n    return Axios({\r\n       method: \"POST\",\r\n       data: { mailId : mailId},\r\n       withCredentials: true,\r\n       url: url + \"/messages/istrash\",\r\n   })\r\n}\r\n\r\nexport const deleteMailOnServer  = (mailId: string[]) => {\r\n    return Axios({\r\n       method: \"POST\",\r\n       data: { mailId : mailId},\r\n       withCredentials: true,\r\n       url: url + \"/messages/deleteMessages\",\r\n   })\r\n}\r\n\r\nexport const sendMailFromServer = (msg: {\r\n    to: string[],\r\n    subject: string,\r\n    html: string,\r\n    text?: string, \r\n  }) => {\r\n    \r\n   \r\n    \r\n    msg.text = htmlToText(msg.html) \r\n    return Axios({\r\n        method: \"POST\",\r\n        data: msg,\r\n        withCredentials: true,\r\n        url: url + \"/messages\",\r\n    });\r\n}\r\n\r\nexport const markAsReadOnServer  = (mailId: string[] , isRead : boolean) => {\r\n    \r\n    return Axios({\r\n       method: \"POST\",\r\n       data: { mailId , isRead},\r\n       withCredentials: true,\r\n       url: url + \"/messages/markasread\",\r\n   })\r\n}","import { Dispatch } from 'redux';\nimport { fetchInboxFromServer, markAsReadOnServer, toggleStarOnServer , sendMailFromServer , fetchAllMailFromServer, toggleIsTrashOnServer, deleteMailOnServer} from '../../helpers/messages';\nimport { loginSever, logoutServer , getUserFromServer } from '../../helpers/user';\nimport { ActionType } from '../action-types';\nimport {\n  Action,\n   closeComposeMailAction,\n   openComposeMailAction, \n   setLocationAction,\n  toggleMailCheckboxAction,\n   toggleSidebarAction,\n   toggleAllMailCheckboxAction,\n   searchMailAction,\n   saveDraftAction,\n} from '../actions';\nimport { Mail } from '../Mail';\n\nimport { RootState } from '../reducers';\n\nexport const setDraft = (draft :\n  {\n  to: string[],\n  subject: string,\n  html: string,\n  flag: boolean,\n  } | null , raiseFlag?: boolean): saveDraftAction => {\n  return {\n    type: ActionType.SAVE_DRAFT,\n    payload: {draft , raiseFlag}\n  };\n};\n\nexport const clearTimer = () => {\n  return {\n    type: ActionType.SET_SEND_TIMER,\n    payload:null,\n  };\n};\n\nexport const setLocation = (location: string): setLocationAction => {\n  return {\n    type: ActionType.SET_LOCATION,\n    payload: location\n  };\n};\n\nexport const setSearchTerm = (searchTerm: string): searchMailAction => {\n  return {\n    type: ActionType.SEARCH_MAIL,\n    payload: searchTerm\n  };\n};\n\nexport const toggleSideBar = (): toggleSidebarAction => {\n  return {\n    type: ActionType.TOGGLE_SIDEBAR,\n  };\n};\n\nexport const openComposeMail = (): openComposeMailAction => {\n  return {\n    type: ActionType.OPEN_COMPOSE_MAIL,\n  };\n};\n\nexport const closeComposeMail = (): closeComposeMailAction => {\n  return {\n    type: ActionType.CLOSE_COMPOSE_MAIL,\n  };\n};\n\nexport const toggleMailCheckbox = (mailId: string): toggleMailCheckboxAction => {\n  return {\n    type: ActionType.TOGGLE_MALI_CHECKBOX,\n    payload: mailId\n  };\n};\n\nexport const toggleAllMailCheckbox = (mailList: string[] | null,reset? : boolean): toggleAllMailCheckboxAction => {\n  return {\n    type: ActionType.TOGGLE_ALL_MALI_CHECKBOX,\n    payload: { mailList ,reset } \n  };\n};\n\nexport const login = (username: string , password: string) => {\n  return async (dispatch: Dispatch<Action>) => {\n\n    dispatch({type: ActionType.LOGIN,});\n    \n  \n    try {\n      const {data} : {data: {username: string , firstChar: string} | false} = await loginSever(username, password);\n     \n      if(data) {\n        dispatch({\n          type: ActionType.LOGIN_SUCCESS,\n          payload: {username: data.username , firstChar: data.firstChar}\n        });\n      } else {\n        dispatch({\n          type: ActionType.LOGIN_FAIL,\n        });\n      }\n    \n    } catch (err) {\n      \n      dispatch({\n        type: ActionType.LOGIN_ERROR,\n        payload: err.message\n      });\n    }\n  };\n};\n\nexport const getUser = () =>\n{\n  return async (dispatch: Dispatch<Action>) => {\n\n    dispatch({type: ActionType.GET_USER});\n    \n    try {\n      const {data} : {data: {username: string , firstChar: string}}  = await getUserFromServer();\n\n     \n      dispatch({\n        type: ActionType.GET_USER_COMPLETE,\n        payload: {username: data.username , firstChar: data.firstChar}\n      });\n     \n    \n    } catch (err) {\n     \n      dispatch({\n        type: ActionType.GET_USER_ERROR,\n        payload: err.message\n      });\n    }\n  };\n}\n\nexport const logout = () =>\n{\n  return async (dispatch: Dispatch<Action>) => {\n\n    dispatch({type: ActionType.LOGOUT});\n    \n    try {\n      await logoutServer();\n\n      dispatch({\n        type: ActionType.LOGOUT_COMPLETE\n      });\n     \n    \n    } catch (err) {\n      \n      dispatch({\n        type: ActionType.LOGOUT_ERROR,\n        payload: err.message\n      });\n    }\n  };\n}\n\nexport const fetchInbox = () =>\n{\n  return async (dispatch: Dispatch<Action>) => {\n\n    dispatch({type: ActionType.FETCH_INBOX});\n    \n    try {\n      const inbox  = (await fetchInboxFromServer()).data;\n      \n      dispatch({\n        type: ActionType.FETCH_INBOX_COMPLETE,\n        payload: inbox\n      });\n     \n    \n    } catch (err) {\n      dispatch({\n        type: ActionType.FETCH_INBOX_ERROR,\n        payload: err.message\n      });\n    }\n  };\n}\n\nexport const fetchAllMail = () =>\n{\n  return async (dispatch: Dispatch<Action> , getState: () => RootState) => {\n\n    dispatch({type: ActionType.FETCH_ALL_MAIL});\n    const mailSize = getState().mail?.mail.length || 0;\n  \n    try {\n      \n      const res = await fetchAllMailFromServer(mailSize)\n      \n      if(res.status !== 200  && typeof res.data === \"string\"){\n       // throw new Error(res.data) \n      } \n\n      if(typeof res.data === \"string\") return;\n\n      const {allMail , needToUpdate}  = res.data;\n     \n      \n      if(needToUpdate)\n      dispatch({\n        type: ActionType.FETCH_ALL_MAIL_COMPLETE,\n        payload: allMail\n      });\n    \n    \n    } catch (err) {\n      let payload\n      if(err.response){\n        payload = err.response.data;\n      } else {\n        payload = \"Network error\";\n      }\n    \n      dispatch({\n        type: ActionType.FETCH_ALL_MAIL_ERROR,\n        payload\n      });\n    }\n  };\n}\n\nexport const toggleStar = (mailId : string) =>\n{\n  return async (dispatch: Dispatch<Action>) => {\n    dispatch({type: ActionType.TOGGLE_STAR , payload: mailId});\n    try {\n     await toggleStarOnServer(mailId);\n    \n    } catch (err) {\n      \n      dispatch({\n        type: ActionType.TOGGLE_STAR_ERROR,\n        payload: err.message\n      });\n    }\n  };\n}\n\nexport const sendMail = (msg: {\n  to: string[],\n  subject: string,\n  html: string,\n  text?: string ,\n}) =>\n{\n\n  return async (dispatch: Dispatch<Action>) => {\n\n    let timer = setTimeout(async () => {\n      dispatch({type: ActionType.SET_SEND_TIMER, payload: null });\n      //clearTimeout(timer);\n      dispatch({type: ActionType.SEND_MAIL });\n      try {\n        const res = (await sendMailFromServer(msg)).data as Mail;\n        dispatch({type: ActionType.SEND_MAIL_COMPLETE , payload: res });\n        \n      } catch (err) {\n        \n        dispatch({\n          type: ActionType.SEND_MAIL_ERROR,\n          payload: err.message\n        });\n      }\n    } , 10000);\n    dispatch({type: ActionType.SET_SEND_TIMER , payload: timer });\n  };\n}\n\n\n\nexport const markAsRead = (mailId : string[] , isRead : boolean) =>\n{\n\n  return async (dispatch: Dispatch<Action>) => {\n    \n    try {\n     \n      await markAsReadOnServer(mailId , isRead);\n\n      dispatch({type: ActionType.MARK_AS_READ , payload:{ mailId , isRead }});\n    \n    } catch (err) {\n      \n      dispatch({\n        type: ActionType.MARK_AS_READ_ERROR,\n        payload: err.message\n      });\n    }\n  };\n}\n\nexport const toggleIsTrash = (mailId : string[]) =>\n{\n  return async (dispatch: Dispatch<Action>) => {\n    \n    dispatch({type: ActionType.TOGGLE_IS_TRASH , payload: mailId});\n    try {\n       await toggleIsTrashOnServer(mailId);\n      \n    } catch (err) {\n      \n      dispatch({\n        type: ActionType.TOGGLE_IS_TRASH_ERROR,\n        payload: err.message\n      });\n    }\n  };\n}\n\nexport const deleteMail = (mailId : string[]) =>\n{\n  return async (dispatch: Dispatch<Action>) => {\n    \n   \n    try {\n       await deleteMailOnServer(mailId);\n       dispatch({type: ActionType.DELETE_MAIL , payload: mailId});\n      \n    \n    } catch (err) {\n      \n      dispatch({\n        type: ActionType.DELETE_MAIL_ERROR,\n        payload: err.message\n      });\n    }\n  };\n}\n\n\n\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst drawerWidth = 200;\r\n\r\n const styles = () => makeStyles((theme) => {\r\n  const drawerWithClose = theme.spacing(7) + 1;\r\n\r\n  return {\r\n    root: {\r\n      display: \"flex\"\r\n    },\r\n    appBar: {\r\n      display: \"flex\",\r\n      width: `calc(100% - ${drawerWithClose}px)`,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen\r\n      })\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen\r\n      })\r\n    },\r\n    menuButton: {\r\n      marginRight: 36\r\n    },\r\n    hide: {\r\n      display: \"none\"\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: \"nowrap\"\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen\r\n      })\r\n    },\r\n\r\n    drawerClose: {\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen\r\n      }),\r\n      overflowX: \"hidden\",\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: drawerWithClose\r\n      }\r\n    },\r\n    toolbar: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      paddingTop: theme.spacing(3),\r\n      paddingLeft: theme.spacing(1)\r\n    },\r\n    AppBarRight: {\r\n      marginLeft: 10\r\n    },\r\n    AppbBarMiddle: {\r\n      flex: 1,  \r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      \r\n    },\r\n  search:{\r\n    display: \"flex\",\r\n    flex: 1,\r\n    marginLeft: 20,\r\n    maxWidth: 600,\r\n    minWidth: 200\r\n  },\r\n   input: {\r\n    marginLeft: theme.spacing(1),\r\n    //maxWidth: 200,\r\n    width: \"100%\"\r\n  },\r\n  iconButton: {\r\n    padding: 10\r\n  },\r\n  loc:{\r\n    backgroundColor: \"rgba(0, 0, 0, 0.1) !important\"\r\n  }\r\n  };\r\n});\r\n\r\nexport default styles;","import { useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../state';\n\nexport const useActions = () => {\n  const dispatch = useDispatch();\n\n  return useMemo(() => {\n    return bindActionCreators(actionCreators, dispatch);\n  }, [dispatch]);\n};\n","import {  IconButton, InputBase,  Paper } from '@material-ui/core';\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useEffect, useState } from 'react';\r\nimport { useActions } from '../hooks/use-actions';\r\nimport makeStyles from './styles';\r\nconst useStyles = makeStyles();\r\n\r\nconst SearchBar = () => {\r\n\r\n  const classes = useStyles();\r\n  const [input , setInput] = useState(\"\");\r\n  \r\n  const { setSearchTerm } = useActions();\r\n\r\n  useEffect(() => {\r\n    setSearchTerm(input);\r\n  },[input , setSearchTerm])\r\n\r\n\r\n  return  (\r\n    <Paper component=\"form\" className={classes.search}>\r\n      <IconButton\r\n       // type=\"submit\"\r\n        className={classes.iconButton}\r\n        aria-label=\"search\"\r\n      >\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <InputBase\r\n        className={classes.input}\r\n        placeholder=\"Search Mail\"\r\n        inputProps={{ \"aria-label\": \"Search Mail\" }}\r\n        onChange={e => setInput(e.currentTarget.value)}\r\n        value = {input}\r\n      />\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default SearchBar;","import { useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { RootState } from '../state';\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import{  useState } from 'react';\r\nimport clsx from \"clsx\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport makeStyles from './styles';\r\nimport { Button, Menu, MenuItem, Tooltip } from '@material-ui/core';\r\nimport SearchBar from './SearchBar'\r\nimport { useTypedSelector } from '../hooks/use-typed-selector';\r\nimport { useActions } from '../hooks/use-actions';\r\n\r\n\r\n\r\nconst useStyles = makeStyles();\r\n\r\n\r\nexport default function MyAppBar() {\r\n\r\n  const classes = useStyles();\r\n\r\n  const {logout} = useActions();\r\n\r\n  const username  = useTypedSelector((state) => {\r\n    return state.user?.username;\r\n  });\r\n\r\n  const  firstChar = useTypedSelector((state) => {\r\n    return state.user?.firstChar;     \r\n  });\r\n\r\n  const open = useTypedSelector((state) => {\r\n    return state.control?.sideBarOpen;\r\n  });\r\n\r\n  \r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event: any) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setAnchorEl(null);\r\n    logout();\r\n  };\r\n\r\n  return (\r\n    <div >\r\n       <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open\r\n        })}\r\n      >\r\n        <Toolbar>\r\n        <Typography variant=\"h6\" noWrap>\r\n            Rabany Mail\r\n          </Typography>\r\n          \r\n\r\n        <div className={classes.AppbBarMiddle}>\r\n        <SearchBar />\r\n           </div>\r\n          \r\n          <div className = {classes.AppBarRight}>\r\n          <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}> \r\n        <Tooltip title={`${username}@rabanymail.com`} aria-label=\"add\">  \r\n        <Avatar> {firstChar}  </Avatar>\r\n       </Tooltip>\r\n       </Button>\r\n       <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <Typography style={{margin: 10}} variant =\"h5\" > {`${username}@rabanymail.com`} </Typography>\r\n        <MenuItem onClick={handleLogout}>\r\n          \r\n        <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n          Logout\r\n          </Button>\r\n          </MenuItem>\r\n      </Menu>\r\n\r\n        </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import { IconButton, Tooltip } from \"@material-ui/core\"\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport RestoreFromTrashIcon from '@material-ui/icons/RestoreFromTrash';\r\n\r\ntype fontSize = \"default\" | \"small\" | \"inherit\" | \"large\" | undefined;\r\n\r\nconst TrashIcons = ({isTrash ,fontSize , onClickTrash , onClickDelete}: {\r\n  isTrash: boolean,\r\n  fontSize?: fontSize,\r\n  onClickTrash: () => void,\r\n  onClickDelete: () => void,\r\n})  => {\r\n  \r\n  return  isTrash \r\n  ? \r\n  <>\r\n    <Tooltip title=\"Restore\" aria-label=\"Restore\">\r\n    <IconButton onClick = {onClickTrash}>\r\n      <RestoreFromTrashIcon fontSize={fontSize}/>\r\n    </IconButton>\r\n  </Tooltip>\r\n\r\n  <Tooltip title=\"Delete\" aria-label=\"Delete\">\r\n    <IconButton onClick = {onClickDelete} >\r\n      <DeleteForeverIcon fontSize={fontSize} />\r\n    </IconButton>\r\n  </Tooltip>\r\n  </>\r\n  :\r\n  \r\n  <Tooltip title=\"move to trash\" aria-label=\"move to trash\">\r\n    <IconButton onClick = {onClickTrash}>\r\n      <DeleteIcon fontSize={fontSize} />\r\n   </IconButton>\r\n  </Tooltip>\r\n  \r\n\r\n}\r\n\r\nexport default TrashIcons;","import  { memo, useState } from 'react';\r\nimport { Checkbox, IconButton } from '@material-ui/core';\r\nimport StarBorderRoundedIcon from '@material-ui/icons/StarBorderRounded';\r\nimport StarRoundedIcon from '@material-ui/icons/StarRounded';\r\nimport './MailListItem.css';\r\nimport moment from 'moment';\r\nimport { Link  } from 'react-router-dom';\r\nimport { useActions } from \"../hooks/use-actions\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport clsx from \"clsx\";\r\nimport { useTypedSelector } from '../hooks/use-typed-selector';\r\nimport TrashIcons from './TrashIcons';\r\nimport {Mail} from \"../state/Mail\";\r\n\r\ninterface MailListItemProps {\r\n    mail : Mail; \r\n    location: string\r\n}\r\n\r\nconst MailListItem = ({mail ,  location }: MailListItemProps) => {\r\n\r\n   \r\nconst {toggleStar ,markAsRead , toggleIsTrash , deleteMail} = useActions();\r\nconst [hover, setHover] = useState(false);\r\n\r\n const { toggleMailCheckbox} = useActions();\r\n\r\n\r\n  const checked = useTypedSelector((state) => {\r\n   return state.mail?.checked.has(mail._id);\r\n  }) || false;\r\n\r\n  const handleCheck =  () => {\r\n    toggleMailCheckbox(mail._id);\r\n  };\r\n\r\n    const handleClickStar = () => {\r\n        toggleStar(mail._id);\r\n        \r\n    }\r\n\r\n    const handleClickTrash = () => {\r\n        toggleIsTrash([mail._id]);\r\n        \r\n    }\r\n\r\n    const handleClickDelete = () => {\r\n        deleteMail([mail._id]);\r\n        \r\n    }\r\n\r\n    const handleClickIsRead = () => {\r\n        markAsRead([mail._id] , !mail.isRead);\r\n        \r\n    }\r\n\r\n    const handleClickIsMail = () => {\r\n        if(!mail.isRead)\r\n        markAsRead([mail._id] , true);\r\n        \r\n    }\r\n\r\n    const MarkAsReadOrUnreadIcon = () => (\r\n        !mail.isRead \r\n        ?\r\n        <Tooltip title=\"Mark as read\" aria-label=\"Mark as read\">\r\n            <IconButton onClick = {handleClickIsRead}>\r\n                <DraftsIcon  />\r\n            </IconButton>\r\n        </Tooltip>  \r\n        :\r\n        <Tooltip title=\"Mark as unread\" aria-label=\"Mark as unread\">\r\n            <IconButton onClick = {handleClickIsRead}>\r\n                <EmailIcon  />\r\n            </IconButton>\r\n        </Tooltip> \r\n        \r\n        )\r\n\r\n\r\n  return (\r\n    <div className={clsx(\"emailRow\", {\r\n        \"readMark\": mail.isRead,\r\n      })}>\r\n        <div className=\"emailRow_options\">\r\n            <Checkbox checked = {checked} onClick={handleCheck}/>\r\n            <IconButton  onClick = {handleClickStar}>\r\n            { mail.isStarred \r\n                ? <StarRoundedIcon fontSize = \"large\"/>\r\n                : <StarBorderRoundedIcon fontSize = \"large\"/>}\r\n            </IconButton>\r\n\r\n        </div>\r\n        \r\n        <Link \r\n        onClick={handleClickIsMail} \r\n        className=\"clickable\"\r\n        to={`/mail/${location}/${mail._id}`} \r\n        style={{ textDecoration: 'none' , color: \"inherit\" }}\r\n        onMouseEnter = {() => {setHover(true)}}\r\n        onMouseLeave={() => {setHover(false)}}>   \r\n    \r\n    <div className=\"clickable\">   \r\n  \r\n        \r\n        <div className=\"emailRow_title\" >\r\n            <h3>\r\n                {mail.isOutbound ? `To:${mail.to[0]}` : mail.from }\r\n            </h3>\r\n        </div>\r\n        \r\n        <div className=\"emailRow_message\">\r\n            <h4>\r\n                {mail.subject}\r\n            </h4>\r\n\r\n            <span className=\"emailRow_description\"> - {\" \"}\r\n                {mail.text}\r\n            </span>\r\n            \r\n        </div>\r\n\r\n    \r\n    </div> \r\n    </Link>  \r\n        \r\n    <div className=\"emailRow_time\"\r\n            onMouseEnter = {() => {setHover(true)}} \r\n            onMouseLeave={() => {setHover(false)}}>\r\n            \r\n    {!hover\r\n        ?\r\n        <h4>{moment(mail.created).format(\"MMM Do\") }</h4>\r\n         :\r\n        <>\r\n        < TrashIcons\r\n            isTrash = {mail.isTrash}\r\n            fontSize = {\"large\"}\r\n            onClickTrash = {handleClickTrash}\r\n            onClickDelete = {handleClickDelete}\r\n        />\r\n                    \r\n                    <MarkAsReadOrUnreadIcon/>   \r\n           </>\r\n        }\r\n\r\n            \r\n    </div>\r\n       \r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(MailListItem);","\r\nimport { Mail } from '../state/Mail';\r\nimport { useTypedSelector } from './use-typed-selector';\r\n\r\n\r\nconst filterMail = (mailList: Mail[] , filter : (mail: Mail) => boolean , searchTerm: string ) => {\r\n  \r\n  if(searchTerm){\r\n    return mailList.filter(mail => filter(mail) && (mail.text.includes(searchTerm) || mail.subject.includes(searchTerm)));\r\n  }\r\n\r\n  return mailList.filter(mail => filter(mail));\r\n  \r\n}\r\n\r\nconst useMailBox = () => {\r\n  return useTypedSelector((state) => {\r\n    const location = state.control?.location;\r\n    let mailList = (state.mail?.mail || []) as Mail[];\r\n    const searchTerm = state.control?.searchTerm || \"\";\r\n   \r\n    switch (location) {\r\n\r\n      case \"inbox\": \r\n        mailList = filterMail(mailList, (mail: Mail) => !mail.isOutbound && !mail.isTrash , searchTerm );\r\n        break\r\n\r\n      case \"starred\": \r\n       \r\n        mailList = filterMail(mailList, (mail: Mail) => mail.isStarred && !mail.isTrash , searchTerm );\r\n        break\r\n    \r\n\r\n      case \"sent\": \r\n        mailList = filterMail(mailList, (mail: Mail) => mail.isOutbound && !mail.isTrash , searchTerm );\r\n        break\r\n\r\n      case \"allmail\": \r\n      mailList = filterMail(mailList, (mail: Mail) => !mail.isTrash , searchTerm );\r\n      break\r\n\r\n      case \"trash\": \r\n      mailList = filterMail(mailList, (mail: Mail) => mail.isTrash , searchTerm );\r\n      break\r\n\r\n      default:\r\n        return mailList;\r\n    }\r\n    return mailList.reverse();\r\n  }) || [] as Mail[];\r\n}\r\n\r\n\r\nexport default useMailBox;","\r\nimport  { useEffect } from 'react';\r\nimport { Checkbox, IconButton, Tooltip } from '@material-ui/core';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport './MailList.css';\r\nimport MailListItem from './MailListItem';\r\nimport TrashIcons from './TrashIcons';\r\nimport { useActions } from \"../hooks/use-actions\";\r\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\r\nimport  useMailBox  from \"../hooks/use-mail-box\";\r\n\r\n\r\ninterface MailListProps {\r\n  match: {\r\n    params: {\r\n      location: string\r\n    }\r\n  }\r\n}\r\n\r\nconst MailList = ( {match }: MailListProps) => {\r\n\r\n\r\n  const location = match.params.location;\r\n\r\n  const {setLocation ,fetchAllMail , toggleAllMailCheckbox , toggleIsTrash , deleteMail , markAsRead} = useActions();\r\n\r\n  const mailList = useMailBox()\r\n\r\n  const mailListId = mailList.map(mail => mail._id);\r\n\r\n\r\n  const checkAll = useTypedSelector((state) => {\r\n    return state.mail?.checked;\r\n   }) || new Set();\r\n\r\n\r\nuseEffect(() => {\r\n  setLocation(location);\r\n  toggleAllMailCheckbox(null ,true);\r\n  if(location === \"inbox\")\r\n  fetchAllMail();\r\n  },[setLocation, toggleAllMailCheckbox, fetchAllMail, location ] );\r\n\r\n  const refresh = () => {\r\n    fetchAllMail();\r\n  }\r\n\r\n  const handleCheckAll =  () => {\r\n    toggleAllMailCheckbox(mailListId);\r\n  };\r\n\r\n  const handleClickTrash = () => {\r\n    toggleAllMailCheckbox(null,true);\r\n    toggleIsTrash(Array.from(checkAll));\r\n    } \r\n\r\n  const handleClickDelete = () => {\r\n  toggleAllMailCheckbox(null,true);\r\n  deleteMail(Array.from(checkAll));\r\n  \r\n  }\r\n\r\n  const handleClickRead = () => {\r\n  markAsRead(Array.from(checkAll) , true);\r\n  }\r\n\r\n  const handleClickUnRead = () => {\r\n  markAsRead(Array.from(checkAll) , false);\r\n  }\r\n\r\n  const RefreshIconTooltip = () =>\r\n  <Tooltip title=\"Refresh\" aria-label=\"Refresh\"> \r\n    <IconButton onClick = {refresh}>\r\n      <RefreshIcon />\r\n    </IconButton>\r\n  </Tooltip> \r\n\r\n\r\n\r\n  return (\r\n    <div className=\"emailList\">\r\n        <div className=\"emailList_settings\">\r\n            <div className=\"emailList_settingsLeft\">\r\n                <Checkbox  checked={checkAll.size !== 0} onClick = {handleCheckAll}/>\r\n                {!checkAll.size \r\n                ?\r\n                <RefreshIconTooltip/>\r\n                :\r\n                 <>\r\n      \r\n                <TrashIcons\r\n                isTrash = {location === \"trash\"}\r\n                onClickTrash = {handleClickTrash}\r\n                onClickDelete = {handleClickDelete}\r\n                />\r\n                 \r\n                <Tooltip title=\"Mark as read\" aria-label=\"Mark as read\">\r\n                  <IconButton onClick = {handleClickRead}>\r\n                    <DraftsIcon  />\r\n                  </IconButton>\r\n                </Tooltip>  \r\n        \r\n                <Tooltip title=\"Mark as unread\" aria-label=\"Mark as unread\">\r\n                  <IconButton onClick = {handleClickUnRead}>\r\n                      <EmailIcon />\r\n                   </IconButton>\r\n                </Tooltip> \r\n                </>\r\n              }\r\n\r\n            </div>\r\n         \r\n        </div>\r\n\r\n        <div className=\"emailList_list\">\r\n            {mailList.map((mail) => (\r\n                <MailListItem key={mail._id} mail={mail} location={location}/>\r\n            ))}\r\n        </div>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default MailList;","import clsx from \"clsx\";\r\nimport { Link } from 'react-router-dom';\r\nimport makeStyles from './styles';\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\r\nimport { useActions } from \"../hooks/use-actions\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport StarRoundedIcon from '@material-ui/icons/StarRounded';\r\nimport PresentToAllIcon from '@material-ui/icons/PresentToAll';\r\nimport CreateSharpIcon from '@material-ui/icons/CreateSharp';\r\n\r\n\r\n\r\nconst linkStyle = { textDecoration: 'none' , color: \"inherit\" };\r\n\r\nconst useStyles = makeStyles();\r\n\r\n\r\nconst MenuItem = ({text , location} : any) => {\r\n  \r\n  const locationFromArray = text[0].toLocaleLowerCase().replaceAll( ' ', '');\r\n  const classes = useStyles();\r\n  const { setLocation} = useActions();\r\n\r\n\r\n  const handleClick = (locationFromArray : string) => {\r\n    return () => { \r\n      if(location !== locationFromArray)\r\n      setLocation(locationFromArray)\r\n    }\r\n  } \r\n\r\n  return (\r\n  <Link to={'/mail/' + locationFromArray} \r\n  style={linkStyle} \r\n  key={text}\r\n  >\r\n     \r\n<ListItem \r\nbutton key={text} \r\nclassName={clsx({[classes.loc]: locationFromArray === location})}\r\nonClick= {handleClick(locationFromArray)}\r\n>\r\n<ListItemIcon>\r\n  {text[1]}\r\n</ListItemIcon>\r\n<ListItemText primary={text[0]} />\r\n\r\n</ListItem>\r\n</Link> )\r\n}\r\n\r\nconst SideMenu = () => {\r\n  \r\n  const classes = useStyles();\r\n\r\n  const {openComposeMail ,toggleSideBar } = useActions();\r\n  \r\n  const open = useTypedSelector(state => state.control?.sideBarOpen); \r\n\r\n  const location = useTypedSelector(state => state.control?.location); \r\n\r\n  const menuArray = [\r\n    [\"Inbox\", <InboxIcon />],\r\n    [\"Starred\", <StarRoundedIcon/>] ,\r\n    [\"Sent\" , <PresentToAllIcon/>],\r\n    [\"All mail\" , <MailIcon /> ],\r\n    [\"trash\",<DeleteIcon/>],\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open\r\n          })\r\n        }}\r\n      >\r\n\r\n      <div className={classes.toolbar}>\r\n        <IconButton onClick={toggleSideBar} >\r\n          {open ? (\r\n            <ChevronLeftIcon />\r\n          ) : (\r\n            <ChevronRightIcon />\r\n          )}\r\n        </IconButton>\r\n      </div>\r\n      \r\n      <Divider />\r\n      \r\n      <List>\r\n       \r\n        { menuArray.map((text : any, index) => {    \r\n          \r\n          return (\r\n            <MenuItem key={text} text={text} location={location}/>\r\n            )\r\n          }\r\n          \r\n          )}\r\n           \r\n        <Divider />\r\n        <ListItem ></ListItem> \r\n        <ListItem button key={\"compose\"} onClick={openComposeMail}>\r\n          <ListItemIcon>\r\n            <CreateSharpIcon /> \r\n          </ListItemIcon>\r\n          <ListItemText primary={\"compose\"} />\r\n        </ListItem>\r\n      </List>\r\n\r\n       \r\n        \r\n    \r\n    </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideMenu;\r\n","import parse from 'html-react-parser';\r\n\r\nconst highlightSearchTerm = (text : string ,searchTermRegExp : RegExp | null) => {\r\n\r\n  if(!searchTermRegExp) return parse(text);\r\n  const newText = text.replaceAll(searchTermRegExp, \"<span style='background-color:rgb(241,196,15)'>$1</span>\")\r\n  return(parse(newText));\r\n  \r\n}\r\n\r\nexport default highlightSearchTerm;","\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport EmailIcon from '@material-ui/icons/Email';\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport './MailPage.css';\nimport moment from 'moment';\nimport { useTypedSelector } from '../hooks/use-typed-selector';\nimport { useActions } from '../hooks/use-actions';\nimport TrashIcons from './TrashIcons';\nimport parse from '../helpers/search';\nimport { useRef } from 'react';\n\ninterface MailPageProps {\n  match: {\n    params: {\n      mailId: string\n      location: string\n    }\n  }\n}\n\n\n\n\nconst MailPage = ({match} : MailPageProps) => {\n    \n    const { toggleIsTrash , deleteMail , markAsRead ,setLocation} = useActions();\n    const history = useHistory();\n\n    const {params:{mailId , location}} = match;\n    \n  \n\n    const mail = useTypedSelector((state) => {\n      return state.mail?.mail.find( mail => mail._id === mailId);\n    });\n\n    const searchTermReg = useTypedSelector((state) => {\n      return state.control?.searchTermRegExp \n    }) || null;\n\n\n    const restoreLocation = useRef((() =>{\n      if(location !== \"trash\") return location;\n      if(mail?.isOutbound) return \"sent\"\n      else return \"inbox\";\n    })()\n    )\n\n \n\n      const handleClickTrash = () => {\n        if(!mail) return;\n        toggleIsTrash([mail._id]);\n        \n        if(location !== \"trash\") {\n        setLocation(\"trash\");\n        history.push(`/mail/trash/${mail._id}`);\n        } else {\n         setLocation(restoreLocation.current);\n          history.push(`/mail/${restoreLocation.current}/${mail._id}`);\n        }\n        \n      }\n     \n      \n      const handleClickDelete = () => {\n        if(mail) {\n          deleteMail([mail._id]);\n          history.push(`/mail/trash`);\n        }\n      }\n      \n     \n      const handleClickUnRead = () => {\n        if(mail)\n        markAsRead([mail._id] , false);\n        history.push(`/mail/${location}`);\n\n      }\n\n   \n\n    if(!mail) return <></>;\n\n  const momentTime = moment(mail.created)\n   const time = `${momentTime.format('dddd, D MMM YYYY, HH:MM')} (${momentTime.fromNow()})`\n\n    return (\n      <div className=\"mail\">\n        <div className=\"mail_tools\">\n          <div className=\"mail_toolsLeft\">\n            <IconButton onClick = {() => history.push(`/mail/${location}`)}>\n              <ArrowBackIcon />\n            </IconButton>\n                    \n            < TrashIcons\n              isTrash = {mail.isTrash}\n              onClickTrash = {handleClickTrash}\n              onClickDelete = {handleClickDelete}\n            />\n\n            <Tooltip title=\"Mark as unread\" aria-label=\"Mark as unread\">\n              <IconButton onClick = {handleClickUnRead}>\n                <EmailIcon />\n              </IconButton>\n            </Tooltip> \n               \n          </div>\n\n          <div className=\"mail_toolsRight\">\n          </div>\n        </div>\n            \n        <div className=\"mail_body\">\n          <div className=\"mail_bodyHeader\">\n            <h2>{ parse(mail.subject, searchTermReg)}</h2> \n            <LabelImportantIcon className=\"mail_important\" />\n            <p>{mail.from}</p>\n            <p className=\"mail_time\">{time}</p>\n          </div>\n\n          <div className=\"mail_message\">\n             {parse(mail.html , searchTermReg)}\n          </div>\n      </div>\n    </div>\n    )\n}\n\nexport default MailPage;","import { useEffect, useRef, useState } from 'react';\r\nimport './ComposeMail.css';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MinimizeIcon from '@material-ui/icons/Minimize';\r\nimport { Button } from '@material-ui/core';\r\nimport { useForm } from 'react-hook-form';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { useActions } from '../hooks/use-actions';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport { useTypedSelector } from '../hooks/use-typed-selector';\r\n\r\nconst ComposeForm = ({refs} : {refs: any}) => {\r\n\r\n    const { register, handleSubmit } = useForm();\r\n    \r\n\r\n    const {closeComposeMail , sendMail, setDraft} = useActions();\r\n    \r\n\r\n    const onSubmit = (data:any) => {\r\n        data.to = [data.to];\r\n        data.html = refs.message.current;\r\n        sendMail(data);\r\n        \r\n        const draft = {...data , flag: false}\r\n        setDraft(draft);\r\n        closeComposeMail();\r\n     };\r\n \r\n     const handleEditorChange = (data:any) => { \r\n       refs.message.current = data;\r\n    };\r\n\r\n    return (<form onSubmit={handleSubmit(onSubmit)} >\r\n\r\n    <input name=\"to\" \r\n        type=\"email\" placeholder=\"To\" ref={register({required: true})}\r\n        onChange = {(e) => refs.to.current = e.target.value}\r\n        defaultValue = {refs.to.current}\r\n         />\r\n    <input name=\"subject\" type=\"text\" placeholder=\"Subject\" ref={register()} \r\n        onChange = {(e) => refs.subject.current = e.target.value}\r\n        defaultValue = {refs.subject.current}\r\n    />\r\n      \r\n\r\n    <Editor\r\n    initialValue={refs.message.current}\r\n    \r\n    init={{\r\n        resize: false,\r\n        min_height: 100,\r\n        \r\n        menubar: false,\r\n        plugins: [\r\n            'advlist autolink lists link image charmap print preview anchor',\r\n            'searchreplace visualblocks code fullscreen',\r\n            'insertdatetime media table paste code help wordcount'\r\n        ],\r\n        toolbar:\r\n        'undo redo | formatselect | bold italic backcolor | \\\r\n        alignleft aligncenter alignright alignjustify | \\\r\n        bullist numlist outdent indent | removeformat | help'\r\n    }}\r\n    onEditorChange={handleEditorChange}\r\n    />\r\n\r\n\r\n    \r\n    <div className=\"sendMail_options\">\r\n        <Button \r\n            type=\"submit\"\r\n            className=\"sendMail_send\" \r\n            variant=\"contained\" \r\n            color=\"primary\">\r\n        Send\r\n        </Button>\r\n    </div>\r\n</form> \r\n)\r\n}\r\n\r\n\r\nconst ComposeMail = () => {\r\n\r\n    const[minimize , setMinimize] = useState(false);\r\n\r\n    const {closeComposeMail , openComposeMail , setDraft } = useActions();\r\n\r\n    const refs = {\r\n        to: useRef(''),\r\n        subject: useRef(''),\r\n        message: useRef(''),\r\n       }\r\n\r\n    \r\n    const flag = useTypedSelector((state) => {\r\n        const draft = state.mail?.draft\r\n         if(draft?.flag){\r\n             refs.to.current = draft.to[0];\r\n             refs.subject.current = draft.subject;\r\n             refs.message.current = draft.html;   \r\n         }\r\n\r\n         return draft?.flag\r\n    });\r\n\r\n    console.log(flag);\r\n    useEffect(()=>{\r\n        if(flag){\r\n            setDraft(null);\r\n            openComposeMail();\r\n        }\r\n    },[flag,setDraft, openComposeMail])\r\n    \r\n   const handleEditorMinimize = () => {\r\n    setMinimize(prev => !prev);\r\n    };\r\n\r\n   \r\n\r\n    const  composeForm = <ComposeForm refs={refs}/>\r\n   \r\n    return (\r\n        <div className={minimize ? \"sendMail minimize\" : \"sendMail\"} >\r\n            <div className=\"sendMail_header\">\r\n                <h3>New Message</h3>\r\n                <div className = \"BN\">\r\n                <IconButton className=\"my\" size={\"small\"} onClick={handleEditorMinimize}> \r\n                    <MinimizeIcon className=\"sendMail_close\" />\r\n                 </IconButton>\r\n                <IconButton size={\"small\"}  onClick={closeComposeMail}> \r\n                    <CloseIcon className=\"sendMail_close\" /> \r\n                </IconButton>\r\n                \r\n                </div>\r\n            </div>\r\n            \r\n            { !minimize && composeForm}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default ComposeMail;","import React, { useEffect } from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTypedSelector } from '../hooks/use-typed-selector';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst SnackbarError = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const errorMassage = useTypedSelector((state) => {\r\n    if(state.mail?.error){\r\n    }\r\n    return state.mail?.error;\r\n   });\r\n  \r\n   useEffect(() => {\r\n     if(errorMassage)\r\n      setOpen(true);\r\n   },[errorMassage])\r\n\r\n  const handleClose = (event : any, reason: any) => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>  \r\n      <Snackbar \r\n      open={open} \r\n      autoHideDuration={9000} \r\n      onClose={handleClose}>\r\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"error\">\r\n        {errorMassage}\r\n        </MuiAlert>\r\n      </Snackbar>  \r\n   </div>\r\n  );\r\n}\r\n\r\nexport default SnackbarError\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTypedSelector } from '../hooks/use-typed-selector';\r\nimport { useActions } from '../hooks/use-actions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst SnackbarSending = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  \r\n  const sending = useTypedSelector((state) => {\r\n    return state.mail?.sending;\r\n   });\r\n\r\n   const timer = useTypedSelector((state) => {\r\n    return state.control?.timer;\r\n   });\r\n\r\n   \r\n   const {clearTimer , setDraft} = useActions();\r\n\r\n   useEffect(() => {\r\n    if(timer){\r\n      setOpen(true);\r\n    } else if(!sending){\r\n     setOpen(false);\r\n   }\r\n   },[sending , timer])\r\n\r\n  const handleClick = () => {\r\n    clearTimer();\r\n    setDraft(null , true)\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const undoButton = \r\n  (timer  && <Button color=\"secondary\" size=\"small\" onClick={handleClick}>UNDO</Button>);\r\n\r\n  return (\r\n    <div className={classes.root}>  \r\n      <Snackbar \r\n      open={open} \r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'left',\r\n      }}\r\n      message = \"Sending\"\r\n      action={\r\n        <React.Fragment>\r\n          {undoButton}\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </React.Fragment>\r\n      }\r\n      />\r\n   </div>\r\n  );\r\n}\r\n\r\nexport default SnackbarSending\r\n","import { Switch, Route, Redirect } from 'react-router-dom';\r\nimport makeStyles from './styles';\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"./MyAppBar\";\r\nimport MailList from \"./MailList\";\r\nimport SideMenu from \"./SideMenu\";\r\nimport MailPage from \"./MailPage\";\r\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\r\nimport ComposeMail from \"./ComposeMail\";\r\nimport SnackbarError from \"./SnackbarError\";\r\nimport SnackbarSending from \"./SnackbarSending\";\r\n\r\nconst useStyles = makeStyles();\r\n\r\nconst List = () => {\r\n  \r\n  const composeMail = useTypedSelector(state => state.control?.composeMailOpen || state.mail?.draft?.flag);\r\n  \r\n  return <>         \r\n  <Switch>\r\n    <Route path=\"/mail/:location\" exact component ={MailList}/> \r\n    <Route path=\"/mail/:location/:mailId\"  component={MailPage}/>\r\n    \r\n    <Route path=\"/\" >\r\n      <Redirect to=\"/mail/inbox\"/>\r\n    </Route>\r\n  </Switch>\r\n  \r\n  {composeMail && <ComposeMail/>}\r\n  </>\r\n}\r\n\r\nconst Mail = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar/>\r\n      <SideMenu/>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar}/>\r\n        <List/>\r\n        <SnackbarError/>\r\n        <SnackbarSending/>\r\n      </main>\r\n    </div> \r\n  );\r\n}\r\n\r\nexport default Mail;\r\n","\r\nconst dimensions = \"150\";\r\n\r\nconst RabanyMailLogo = () => {\r\n\r\n  return <img\r\n  src= \"/rabany mail-logo.jpg\"\r\n  alt = \"Rabany mail logo\"\r\n  width={dimensions}\r\n  height={dimensions}\r\n/>\r\n}\r\n\r\nexport default RabanyMailLogo","import React, { useState } from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link } from 'react-router-dom';\r\nimport { registerServer } from '../helpers/user';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RabanyMailLogo from './RabanyMailLogo';\r\n\r\n\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link  to={'/'} style={{ textDecoration: 'none' , color: \"inherit\" }}>\r\n        Rabany Mail\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [singUpUsername, setSingUpUsername] = useState(\"\");\r\n  const [singUpPassword, setSingUpnPassword] = useState(\"\");\r\n  const [singUpPasswordConfirm, setSingUpPasswordConfirm] = useState(\"\");\r\n\r\n  const [singUpUsernameError, setSingUpUsernameError] = useState(undefined);\r\n  const [singUpPasswordError, setSingUpnPasswordError] = useState(undefined );\r\n  const [singUpPasswordConfirmError, setSingUpPasswordConfirmError] = useState(undefined);\r\n\r\n  const signUpOnServer = async (e:React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setSingUpUsername(prev => prev.trim());\r\n    const errors = (await registerServer(singUpUsername.trim(), singUpPassword, singUpPasswordConfirm)).data;\r\n    \r\n    \r\n    if(errors.length){\r\n    setSingUpUsernameError(errors.find((e: {param: string}) => e.param === \"username\")?.msg )\r\n    setSingUpnPasswordError(errors.find((e: {param: string}) => e.param === \"password\")?.msg )\r\n    setSingUpPasswordConfirmError(errors.find((e: {param: string}) => e.param === \"passwordConfirm\")?.msg )\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }\r\n  \r\n  \r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        \r\n      <RabanyMailLogo/>\r\n\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={signUpOnServer}>\r\n          <Grid container spacing={2}>\r\n \r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"User Name\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                onChange = {e => setSingUpUsername(e.target.value)}\r\n                value = {singUpUsername}\r\n                helperText= {singUpUsernameError}\r\n                error = {singUpUsernameError ? true : false}\r\n              />\r\n                </Grid>\r\n         \r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange = {e => setSingUpnPassword(e.target.value)}\r\n                value = {singUpPassword}\r\n                helperText= {singUpPasswordError}\r\n                error = {singUpPasswordError ? true : false}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password-confirm\"\r\n                label=\"password confirm\"\r\n                type=\"password\"\r\n                id=\"password-confirm\"\r\n                autoComplete=\"current-password\"\r\n                onChange = {e => setSingUpPasswordConfirm(e.target.value)}\r\n                value = {singUpPasswordConfirm}\r\n                helperText= {singUpPasswordConfirmError}\r\n                error = {singUpPasswordConfirmError ? true : false}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-start\">\r\n            <Grid item>\r\n            <Link  to={'/login'} style={{ textDecoration: 'none' , color: \"inherit\" }}>\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n\r\n\r\n}","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useActions } from '../hooks/use-actions';\r\nimport { useTypedSelector } from '../hooks/use-typed-selector';\r\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\r\nimport RabanyMailLogo from './RabanyMailLogo';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link  to={'/'} style={{ textDecoration: 'none' , color: \"inherit\" }}>\r\n        Rabany Mail\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  alert:{\r\n    marginBottom:0,\r\n    marginRight: 10,\r\n    marginTop: 20,\r\n    minHeight: 0,\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    padding: \"9px 12px 9px 20px\",\r\n    borderWidth: \"1px 1px 1px 0px\",\r\n    borderStyle: \"solid\",\r\n    borderRadius: 6,\r\n    fontSize: 14,\r\n    lineHeight: 3,\r\n    color: \"rgb(143, 34, 27)\",\r\n    borderColor: \"rgb(249, 211, 197) rgb(249, 211, 197) rgb(249, 211, 197) rgb(207, 74, 34)\",\r\n    backgroundColor: \"rgb(252, 235, 226)\",\r\n  },\r\n  alertText:{\r\n \r\n  alignSelf: \"center\",\r\n  mozBoxFlex: 1,\r\n  flexGrow: 1,\r\n  marginLeft: 15,\r\n  marginRight: 10,\r\n  color: \"rgb(207, 74, 34)\",\r\n  }\r\n  \r\n\r\n}));\r\n\r\nconst SignIn = () => {\r\n  const classes = useStyles();\r\n  const {login} = useActions();\r\n\r\n  const fail = useTypedSelector((state) => {\r\n    return state.user?.fail;\r\n   });\r\n\r\n  const [loginUsername, setLoginUsername] = useState(\"\");\r\n  const [loginPassword, setLoginPassword] = useState(\"\");\r\n  \r\n  const signInOnServer = (e:React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    login(loginUsername , loginPassword)\r\n  }\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n\r\n        <RabanyMailLogo/>\r\n        <Typography component=\"h1\" variant=\"h5\" >\r\n          Sign in\r\n          </Typography>\r\n         {fail && <div role=\"alert\" className={classes.alert}  data-testid=\"bannerAuthCodeError\">\r\n         <WarningRoundedIcon style={{marginTop: 8}}/>\r\n            \r\n            <span className= {classes.alertText}>\r\n              Please provide a valid username and password.\r\n            </span>\r\n            \r\n            </div>}\r\n      \r\n        <form className={classes.form} noValidate onSubmit={signInOnServer}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"User Name\"\r\n            name=\"username\"\r\n            //autoComplete=\"username\"\r\n            autoFocus\r\n            value = {loginUsername}\r\n            error={fail}\r\n            onChange = {e => setLoginUsername(e.target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value = {loginPassword}\r\n            error={fail}\r\n            onChange = {e => setLoginPassword(e.target.value)}\r\n          />\r\n    \r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n           \r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            \r\n            <Grid item>\r\n            <Link  to={'/signup'} style={{ textDecoration: 'none' , color: \"inherit\" }}>\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignIn;","\r\nimport Mail from './Mail';\r\nimport {  Switch, Route, Redirect } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport SignUp from './SignUp';\r\nimport SignIn from './SignIn';\r\nimport { useActions } from '../hooks/use-actions';\r\nimport { useTypedSelector } from '../hooks/use-typed-selector';\r\n\r\nconst App  = () => {\r\n  \r\n  const {getUser , fetchAllMail} = useActions();\r\n  \r\n  const username  = useTypedSelector((state) => {\r\n    return state.user?.username \r\n  });\r\n\r\n  useEffect(() => {\r\n    if(username) {\r\n      fetchAllMail();\r\n    } else {\r\n      getUser();\r\n    }\r\n  },[username , getUser , fetchAllMail]);\r\n\r\n  //before reaching the server for user\r\n   if (username === undefined) return <></> ;\r\n   \r\n   //if no user is login\r\n   if (!username) {\r\n    return <>\r\n        <Switch>\r\n       \r\n          <Route path=\"/login\"  component ={SignIn}/>\r\n          <Route path=\"/signup\" component ={SignUp}/>\r\n        \r\n          <Route path=\"/\" >\r\n            <Redirect to=\"/login\"/>\r\n          </Route>\r\n\r\n        </Switch>\r\n    </>\r\n   }\r\n \r\n  return <Mail/>\r\n \r\n  }\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { BrowserRouter as Router} from 'react-router-dom';\nimport { store } from './state';\nimport { Provider } from 'react-redux';\n\n\nconst RabanyMail  = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <App/>\n      </Router>\n    </Provider>\n  );\n}\n\n\nReactDOM.render(<RabanyMail/>, document.querySelector('#root'));\n\n\n","import Axios from 'axios';\r\n\r\nconst localUrl = \"http://localhost:7777\"\r\nconst serverUrl = \"https://rabany-mail.herokuapp.com\"\r\n\r\nconst url = localUrl;\r\n\r\nexport const loginSever = (username: string , password: string) => {\r\n  return Axios({\r\n   method: \"POST\",\r\n   data: {\r\n     username,\r\n     password,\r\n   },\r\n   withCredentials: true,\r\n   url: url + \"/login\",\r\n});\r\n}\r\n\r\nexport const logoutServer = () => {\r\n return Axios({\r\n   method: \"GET\",\r\n   withCredentials: true,\r\n   url: url + \"/logout\",\r\n});\r\n}\r\n\r\nexport const getUserFromServer = () => {\r\nreturn Axios({\r\n   method: \"GET\",\r\n   withCredentials: true,\r\n   url: url + \"/user\",\r\n });\r\n}\r\n\r\nexport const registerServer = (username: string , password: string , passwordConfirm:string) => {\r\n  return Axios({\r\n   method: \"POST\",\r\n   data: {\r\n     username,\r\n     password,\r\n     passwordConfirm,\r\n   },\r\n   withCredentials: true,\r\n   url: url + \"/register\",\r\n});\r\n}","export enum ActionType {\n  TOGGLE_SIDEBAR = \"toggle_sideBar\",\n  OPEN_COMPOSE_MAIL = \"open_compose_mail\",\n  CLOSE_COMPOSE_MAIL = \"close_compose_mail\",\n  LOGIN = \"login\",\n  LOGIN_SUCCESS = 'login_success',\n  LOGIN_FAIL = 'login_fail',\n  LOGIN_ERROR = 'login_error',\n  GET_USER = \"get_user\",\n  GET_USER_COMPLETE = \"get_user_complete\",\n  GET_USER_ERROR = \"get_user_error\",\n  LOGOUT = \"logout\",\n  LOGOUT_COMPLETE = 'logout_complete',\n  LOGOUT_ERROR = 'logout_error',\n  FETCH_ALL_MAIL = 'fetch_inbox',\n  FETCH_ALL_MAIL_COMPLETE = 'fetch_all_mail_complete',\n  FETCH_ALL_MAIL_ERROR = 'fetch_inbox_error',\n  FETCH_INBOX = 'fetch_inbox',\n  FETCH_INBOX_COMPLETE = 'fetch_inbox_complete',\n  FETCH_INBOX_ERROR = 'fetch_inbox_error',\n  TOGGLE_STAR = \"toggle_star\",\n  TOGGLE_STAR_ERROR = 'toggle_star_error',\n  SEND_MAIL = \"send_mail\",\n  SEND_MAIL_COMPLETE = \"send_mail_complete\",\n  SEND_MAIL_ERROR = \"send_mail_error\",\n  SET_LOCATION = \"set_location\",\n  MARK_AS_READ = \"mark_as_read\",\n  MARK_AS_READ_ERROR = \"mark_as_read_error\",\n  TOGGLE_IS_TRASH = \"toggle_is_trash\",\n  TOGGLE_IS_TRASH_ERROR = 'toggle_is_trash_error',\n  DELETE_MAIL = \"delete_mail\",\n  DELETE_MAIL_ERROR = \"delete_mail_error\",\n  TOGGLE_MALI_CHECKBOX = \"toggle_mail_checkbox\",\n  TOGGLE_ALL_MALI_CHECKBOX = \"toggle_all_mail_checkbox\",\n  SEARCH_MAIL = \"search_mail\",\n  SET_SEND_TIMER = \"set_send_timer\",\n  SAVE_DRAFT = \"SAVE_DRAFT\",\n}\n","import produce from 'immer';\nimport { ActionType } from '../action-types';\nimport { Action } from '../actions';\n\ninterface UserState {\n  loading: boolean;\n  fail: boolean;\n  error: string | null;\n  username: string | undefined;\n  firstChar: string;\n}\n\nconst initialState: UserState = {\n  loading: true,\n  fail: false,\n  error: null,\n  username: undefined,\n  firstChar: \"\",\n};\n\nconst reducer = produce((state: UserState = initialState, action: Action) => {\n  switch (action.type) {\n    case ActionType.LOGIN:\n      state.loading = true;\n      return\n\n    case ActionType.LOGIN_SUCCESS:\n      state.loading = false;\n      state.fail = false;\n      state.username = action.payload.username;\n      state.firstChar = action.payload.firstChar;\n      return\n\n    case ActionType.LOGIN_FAIL:\n      state.loading = false;\n      state.fail = true;\n\n      return;\n\n    case ActionType.LOGIN_ERROR:\n      state.loading = false;\n      state.error = action.payload;\n      return\n\n\n      //may be useless\n    case ActionType.GET_USER:\n      state.loading = true;\n      return\n  \n    case ActionType.GET_USER_COMPLETE:\n      state.loading = false;\n      state.fail = false;\n      state.username = action.payload.username;\n      state.firstChar = action.payload.firstChar;\n      return\n  \n    case ActionType.GET_USER_ERROR:\n      state.loading = false;\n      state.error = action.payload;\n      return  \n      \n    case ActionType.LOGOUT:\n      state.loading = true;\n      state.error = null;\n      return\n    \n    case ActionType.LOGOUT_COMPLETE:\n      state.loading = false;\n      state.username = \"\";\n      state.firstChar = \"\";\n      return\n    \n    case ActionType.LOGOUT_ERROR:\n      state.loading = false;\n      state.error = action.payload;\n      return  \n  \n    default:\n      return state;\n  }\n});\n\n\nexport default reducer;\n","import produce , { enableMapSet } from 'immer';\nimport { ActionType } from '../action-types';\nimport { Action } from '../actions';\nimport { Mail } from '../Mail';\n\n\nenableMapSet();\n\ninterface MailState {\n  loading: boolean;\n  sending: boolean;\n  error: string | null;\n  mail: Mail[];\n  checked: Set<string>;\n  draft: {\n    to: string[];\n    subject: string;\n    html: string;\n    flag: boolean;\n  } | null;\n}\n\nconst initialState: MailState = {\n  loading: false,\n  sending: false,\n  error: null,\n  mail: [],\n  checked: new Set(),\n  draft: null\n};\n\nconst reducer = produce((state: MailState = initialState, action: Action) => {\n  \n\n  switch (action.type) {\n\n    case ActionType.SAVE_DRAFT:\n      if(action.payload.raiseFlag !== undefined && state.draft) {\n        state.draft = {...state.draft , flag: action.payload.raiseFlag};\n      } else {\n        state.draft = action.payload.draft;\n      }\n      return\n      \n    case ActionType.FETCH_INBOX:\n      state.loading = true;\n      return\n\n    case ActionType.FETCH_INBOX_COMPLETE:\n      state.loading = false;\n     // state.inbox = action.payload;\n      return\n\n    case ActionType.FETCH_INBOX_ERROR:\n      state.loading = false;\n      state.error = action.payload;\n      return\n\n    case ActionType.FETCH_ALL_MAIL:\n        state.loading = true;\n        return\n  \n    case ActionType.FETCH_ALL_MAIL_COMPLETE:\n      state.loading = false;\n      state.mail = action.payload;\n      \n      return\n  \n      case ActionType.FETCH_ALL_MAIL_ERROR:\n        state.loading = false;\n        state.error = action.payload;\n        return  \n\n    case ActionType.TOGGLE_STAR: {\n      const mailId = action.payload;\n      const index = state.mail.findIndex(mail => mail._id === mailId)\n      const newToggle = !state.mail[index].isStarred\n      state.mail[index] = {...state.mail[index] , isStarred: newToggle }\n      return\n    }\n    case ActionType.TOGGLE_STAR_ERROR: \n      state.error = action.payload;\n    \n      return\n\n    case ActionType.MARK_AS_READ: {\n      const {mailId , isRead} = action.payload;\n      for(const id of mailId) {\n      const index = state.mail.findIndex(mail => mail._id === id)\n      state.mail[index] = {...state.mail[index] , isRead: isRead }\n      }\n      return\n    }\n\n    case ActionType.SEND_MAIL:\n      state.sending = true;\n      return\n    \n    case ActionType.SEND_MAIL_COMPLETE:\n      state.sending = false;\n      state.mail.push(action.payload);\n      return\n    \n    case ActionType.SEND_MAIL_ERROR:\n      state.sending = false;\n      state.error = action.payload;\n      return\n\n    case ActionType.MARK_AS_READ_ERROR:\n      state.error = action.payload;\n      return\n\n    case ActionType.TOGGLE_IS_TRASH: {\n      const mailId = action.payload;\n      for(const id of mailId) {\n      const index = state.mail.findIndex(mail => mail._id === id)\n      const newToggle = !state.mail[index].isTrash;\n      state.mail[index] = {...state.mail[index] , isTrash: newToggle }\n      }\n      return\n    }\n    \n    case ActionType.TOGGLE_IS_TRASH_ERROR: \n      state.error = action.payload;\n      return\n\n    case ActionType.DELETE_MAIL: {\n      const mailId = action.payload;\n      const filletedMail = [];\n      for(const mail of state.mail) {\n      if(!mailId.includes(mail._id))\n      filletedMail.push(mail);\n      }\n      state.mail = filletedMail;\n      return \n  \n    }\n      \n    case ActionType.DELETE_MAIL_ERROR: \n      state.error = action.payload;\n      return\n    \n    case ActionType.TOGGLE_ALL_MALI_CHECKBOX:\n      if(state.checked.size || action.payload.reset){\n        state.checked = new Set();\n      } else if(action.payload.mailList){\n        state.checked = new Set(action.payload.mailList);\n      }\n      return\n\n    case ActionType.TOGGLE_MALI_CHECKBOX:\n        if(state.checked.has(action.payload)){\n          state.checked.delete(action.payload);\n        } else {\n          state.checked.add(action.payload);\n        }\n        return\n\n    default:\n      return state;\n  }\n});\n\n\nexport default reducer;\n","import produce from 'immer';\nimport { ActionType } from '../action-types';\nimport { Action } from '../actions';\n\ninterface ControlState {\n  sideBarOpen: boolean;\n  composeMailOpen: boolean;\n  location: string;\n  searchTermRegExp: RegExp | null;\n  searchTerm: string;\n  timer: NodeJS.Timeout | null;\n\n}\n\nconst initialState: ControlState = {\n  sideBarOpen: true,\n  composeMailOpen: false,\n  location: \"\",\n  searchTermRegExp: null,\n  searchTerm: \"\",\n  timer: null,\n};\n\nconst reducer = produce((state: ControlState = initialState, action: Action ) => {\n\n\n  switch (action.type) {\n\n    case ActionType.SET_SEND_TIMER:\n      \n      if(!action.payload && state.timer){\n        clearTimeout(state.timer)\n      }\n      state.timer = action.payload;\n      return\n\n    case ActionType.SET_LOCATION:\n      state.location = action.payload;\n      return\n\n    case ActionType.TOGGLE_SIDEBAR:\n      state.sideBarOpen = !state.sideBarOpen\n\n      return\n\n      case ActionType.OPEN_COMPOSE_MAIL:\n      state.composeMailOpen = true;\n\n      return\n\n      case ActionType.CLOSE_COMPOSE_MAIL:\n        state.composeMailOpen = false;\n        return\n\n      case ActionType.SEARCH_MAIL:\n        if(action.payload === \"\") {\n          state.searchTermRegExp = null;\n        } else {\n          state.searchTermRegExp = new RegExp(\"(\" + action.payload + \")(?!([^<]+)?>)\", \"gi\");\n        }\n        state.searchTerm = action.payload;\n      return\n\n    default:\n      return state;\n  }\n});\n\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport userReducer from './UserReducer';\nimport MailReducer from './MailReducer';\nimport ControlReducer from './ControlReducer';\n\nconst reducers = combineReducers({\n  user: userReducer,\n  mail: MailReducer,\n  control: ControlReducer\n  \n});\n\nexport default reducers;\n\nexport type RootState = ReturnType<typeof reducers>;\n","export * from './store';\nexport * from './reducers';\nexport * from './Mail';\nexport * as actionCreators from './action-creators';\n"],"sourceRoot":""}