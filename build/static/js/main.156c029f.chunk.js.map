{"version":3,"sources":["state/store.ts","helpers/messages.ts","state/action-creators/index.ts","components/styles.ts","hooks/use-typed-selector.ts","hooks/use-actions.ts","components/MyAppBar.tsx","components/TrashIcons.tsx","components/MailListItem.tsx","hooks/use-mail-box.ts","components/MailList.tsx","components/SideMenu.tsx","components/MailPage.tsx","components/ComposeMail.tsx","components/Mail.tsx","components/RabanyMailLogo.tsx","components/SignUp.tsx","components/SignIn.tsx","components/App.tsx","index.tsx","state/action-types/index.ts","helpers/user.ts","state/reducers/UserReducer.ts","state/reducers/MailReducer.ts","state/reducers/ControlReducer.ts","state/reducers/index.ts","state/index.ts"],"names":["store","createStore","reducers","applyMiddleware","thunk","url","fetchAllMailFromServer","mailSize","Axios","method","data","withCredentials","toggleStarOnServer","mailId","toggleIsTrashOnServer","deleteMailOnServer","sendMailFromServer","msg","text","htmlToText","html","markAsReadOnServer","isRead","setLocation","location","type","ActionType","SET_LOCATION","payload","toggleSideBar","TOGGLE_SIDEBAR","openComposeMail","OPEN_COMPOSE_MAIL","closeComposeMail","CLOSE_COMPOSE_MAIL","toggleMailCheckbox","TOGGLE_MALI_CHECKBOX","toggleAllMailCheckbox","mailList","reset","TOGGLE_ALL_MALI_CHECKBOX","login","username","password","dispatch","a","LOGIN","loginSever","LOGIN_SUCCESS","firstChar","LOGIN_FAIL","LOGIN_ERROR","message","getUser","GET_USER","getUserFromServer","GET_USER_COMPLETE","GET_USER_ERROR","logout","LOGOUT","logoutServer","LOGOUT_COMPLETE","LOGOUT_ERROR","fetchInbox","FETCH_INBOX","inbox","FETCH_INBOX_COMPLETE","FETCH_INBOX_ERROR","fetchAllMail","getState","FETCH_ALL_MAIL","mail","length","allMail","needToUpdate","FETCH_ALL_MAIL_COMPLETE","FETCH_ALL_MAIL_ERROR","toggleStar","TOGGLE_STAR","TOGGLE_STAR_ERROR","sendMail","SEND_MAIL","res","console","log","SEND_MAIL_COMPLETE","SEND_MAIL_ERROR","markAsRead","MARK_AS_READ","MARK_AS_READ_ERROR","toggleIsTrash","TOGGLE_IS_TRASH","TOGGLE_IS_TRASH_ERROR","deleteMail","DELETE_MAIL","DELETE_MAIL_ERROR","drawerWidth","styles","makeStyles","theme","drawerWithClose","spacing","root","display","appBar","width","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","paddingTop","paddingLeft","AppBarRight","AppbBarMiddle","flex","search","maxWidth","minWidth","input","iconButton","loc","backgroundColor","useTypedSelector","useSelector","useActions","useDispatch","useMemo","bindActionCreators","actionCreators","useStyles","MyAppBar","classes","state","user","open","control","sideBarOpen","useState","anchorEl","setAnchorEl","AppBar","position","className","clsx","Toolbar","Typography","variant","noWrap","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","Tooltip","title","aria-label","Avatar","Menu","id","keepMounted","Boolean","onClose","style","margin","MenuItem","fullWidth","color","TrashIcons","isTrash","fontSize","onClickTrash","onClickDelete","IconButton","MailListItem","hover","setHover","checked","has","_id","handleClickIsRead","MarkAsReadOrUnreadIcon","Checkbox","isStarred","to","textDecoration","onMouseEnter","onMouseLeave","isOutbound","from","subject","moment","created","format","useMailBox","filter","reverse","MailList","match","params","checkAll","Set","useEffect","refresh","RefreshIconTooltip","size","Array","map","SideMenu","Drawer","paper","Divider","index","locationFromArray","toLocaleLowerCase","replaceAll","ListItem","button","ListItemIcon","ListItemText","primary","MailPage","history","useHistory","find","mailID","goBack","push","parse","ComposeMail","useForm","register","handleSubmit","useRef","onSubmit","current","name","placeholder","ref","required","config","attribution","height","quickInsertTags","listAdvancedTypes","onModelChange","List","composeMail","composeMailOpen","path","exact","component","Mail","CssBaseline","RabanyMailLogo","src","alt","Copyright","align","Date","getFullYear","marginTop","flexDirection","avatar","palette","secondary","main","form","submit","SignUp","singUpUsername","setSingUpUsername","singUpPassword","setSingUpnPassword","singUpPasswordConfirm","setSingUpPasswordConfirm","undefined","singUpUsernameError","setSingUpUsernameError","singUpPasswordError","setSingUpnPasswordError","singUpPasswordConfirmError","setSingUpPasswordConfirmError","signUpOnServer","e","preventDefault","prev","trim","registerServer","errors","param","Container","noValidate","Grid","container","item","xs","TextField","label","autoComplete","onChange","target","value","helperText","error","justify","Box","mt","alert","marginBottom","minHeight","borderWidth","borderStyle","borderRadius","lineHeight","borderColor","alertText","alignSelf","mozBoxFlex","SignIn","fail","loginUsername","setLoginUsername","loginPassword","setLoginPassword","role","data-testid","autoFocus","App","RabanyMail","ReactDOM","render","document","querySelector","passwordConfirm","initialState","loading","reducer","produce","action","enableMapSet","sending","findIndex","newToggle","filletedMail","includes","delete","add","combineReducers","userReducer","MailReducer","ControlReducer"],"mappings":"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","file":"static/js/main.156c029f.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\n\nexport const store = createStore(\n  reducers,\n  {},\n  applyMiddleware( thunk)\n);\n","import Axios, { AxiosPromise } from 'axios';\r\nimport { Mail } from '../state/Mail';\r\nimport {htmlToText} from 'html-to-text';\r\n\r\n\r\nconst localUrl = \"http://localhost:7777\"\r\nconst serverUrl = \"https://rabany-mail.herokuapp.com\"\r\n\r\nconst url = serverUrl;\r\n\r\nexport const fetchInboxFromServer : () => AxiosPromise<Mail[]> = () => {\r\n return Axios({\r\n    method: \"GET\",\r\n    withCredentials: true,\r\n    url: url + \"/messages/inbox\",\r\n})\r\n}\r\n\r\nexport const fetchAllMailFromServer : (mailSize : number) => AxiosPromise<{allMail : Mail[] , needToUpdate : boolean} > = (mailSize : number) => {\r\n    return Axios({\r\n       method: \"POST\",\r\n       data: {mailSize} ,\r\n       withCredentials: true,\r\n       url: url + \"/messages/allmail\",\r\n   })\r\n   }\r\n\r\nexport const toggleStarOnServer  = (mailId: string) => {\r\n    return Axios({\r\n       method: \"POST\",\r\n       data: { mailId : mailId},\r\n       withCredentials: true,\r\n       url: url + \"/messages/starred\",\r\n   })\r\n}\r\n\r\nexport const toggleIsTrashOnServer  = (mailId: string[]) => {\r\n    return Axios({\r\n       method: \"POST\",\r\n       data: { mailId : mailId},\r\n       withCredentials: true,\r\n       url: url + \"/messages/istrash\",\r\n   })\r\n}\r\n\r\nexport const deleteMailOnServer  = (mailId: string[]) => {\r\n    return Axios({\r\n       method: \"POST\",\r\n       data: { mailId : mailId},\r\n       withCredentials: true,\r\n       url: url + \"/messages/deleteMessages\",\r\n   })\r\n}\r\n\r\nexport const sendMailFromServer = (msg: {\r\n    to: string[],\r\n    subject: string,\r\n    html: string\r\n    text: string | undefined\r\n  }) => {\r\n    \r\n   \r\n    \r\n    msg.text = htmlToText(msg.html) \r\n    return Axios({\r\n        method: \"POST\",\r\n        data: msg,\r\n        withCredentials: true,\r\n        url: url + \"/messages\",\r\n    });\r\n}\r\n\r\nexport const markAsReadOnServer  = (mailId: string[] , isRead : boolean) => {\r\n    \r\n    return Axios({\r\n       method: \"POST\",\r\n       data: { mailId , isRead},\r\n       withCredentials: true,\r\n       url: url + \"/messages/markasread\",\r\n   })\r\n}","import { Dispatch } from 'redux';\nimport { fetchInboxFromServer, markAsReadOnServer, toggleStarOnServer , sendMailFromServer , fetchAllMailFromServer, toggleIsTrashOnServer, deleteMailOnServer} from '../../helpers/messages';\nimport { loginSever, logoutServer , getUserFromServer } from '../../helpers/user';\nimport { ActionType } from '../action-types';\nimport {\n  Action,\n   closeComposeMailAction,\n   openComposeMailAction, \n   setLocationAction,\n  toggleMailCheckboxAction,\n   toggleSidebarAction,\n   toggleAllMailCheckboxAction,\n} from '../actions';\nimport { Mail } from '../Mail';\n\nimport { RootState } from '../reducers';\n\nexport const setLocation = (location: string): setLocationAction => {\n  return {\n    type: ActionType.SET_LOCATION,\n    payload: location\n  };\n};\n\nexport const toggleSideBar = (): toggleSidebarAction => {\n  return {\n    type: ActionType.TOGGLE_SIDEBAR,\n  };\n};\n\nexport const openComposeMail = (): openComposeMailAction => {\n  return {\n    type: ActionType.OPEN_COMPOSE_MAIL,\n  };\n};\n\nexport const closeComposeMail = (): closeComposeMailAction => {\n  return {\n    type: ActionType.CLOSE_COMPOSE_MAIL,\n  };\n};\n\nexport const toggleMailCheckbox = (mailId: string): toggleMailCheckboxAction => {\n  return {\n    type: ActionType.TOGGLE_MALI_CHECKBOX,\n    payload: mailId\n  };\n};\n\nexport const toggleAllMailCheckbox = (mailList: Mail[],reset? : boolean): toggleAllMailCheckboxAction => {\n  return {\n    type: ActionType.TOGGLE_ALL_MALI_CHECKBOX,\n    payload: { mailList ,reset } \n  };\n};\n\nexport const login = (username: string , password: string) => {\n  return async (dispatch: Dispatch<Action>) => {\n\n    dispatch({type: ActionType.LOGIN,});\n    \n  \n    try {\n      const {data} : {data: {username: string , firstChar: string} | false} = await loginSever(username, password);\n     \n      if(data) {\n        dispatch({\n          type: ActionType.LOGIN_SUCCESS,\n          payload: {username: data.username , firstChar: data.firstChar}\n        });\n      } else {\n        dispatch({\n          type: ActionType.LOGIN_FAIL,\n        });\n      }\n    \n    } catch (err) {\n      \n      dispatch({\n        type: ActionType.LOGIN_ERROR,\n        payload: err.message\n      });\n    }\n  };\n};\n\nexport const getUser = () =>\n{\n  return async (dispatch: Dispatch<Action>) => {\n\n    dispatch({type: ActionType.GET_USER});\n    \n    try {\n      const {data} : {data: {username: string , firstChar: string}}  = await getUserFromServer();\n\n     \n      dispatch({\n        type: ActionType.GET_USER_COMPLETE,\n        payload: {username: data.username , firstChar: data.firstChar}\n      });\n     \n    \n    } catch (err) {\n     \n      dispatch({\n        type: ActionType.GET_USER_ERROR,\n        payload: err.message\n      });\n    }\n  };\n}\n\nexport const logout = () =>\n{\n  return async (dispatch: Dispatch<Action>) => {\n\n    dispatch({type: ActionType.LOGOUT});\n    \n    try {\n      await logoutServer();\n\n      dispatch({\n        type: ActionType.LOGOUT_COMPLETE\n      });\n     \n    \n    } catch (err) {\n      \n      dispatch({\n        type: ActionType.LOGOUT_ERROR,\n        payload: err.message\n      });\n    }\n  };\n}\n\nexport const fetchInbox = () =>\n{\n  return async (dispatch: Dispatch<Action>) => {\n\n    dispatch({type: ActionType.FETCH_INBOX});\n    \n    try {\n      const inbox  = (await fetchInboxFromServer()).data;\n      \n      dispatch({\n        type: ActionType.FETCH_INBOX_COMPLETE,\n        payload: inbox\n      });\n     \n    \n    } catch (err) {\n      dispatch({\n        type: ActionType.FETCH_INBOX_ERROR,\n        payload: err.message\n      });\n    }\n  };\n}\n\nexport const fetchAllMail = () =>\n{\n  return async (dispatch: Dispatch<Action> , getState: () => RootState) => {\n\n    dispatch({type: ActionType.FETCH_ALL_MAIL});\n    const mailSize = getState().mail?.mail.length || 0;\n  \n    try {\n      const {allMail , needToUpdate}  = (await fetchAllMailFromServer(mailSize)).data;\n     \n      \n      if(needToUpdate)\n      dispatch({\n        type: ActionType.FETCH_ALL_MAIL_COMPLETE,\n        payload: allMail\n      });\n     \n    \n    } catch (err) {\n      dispatch({\n        type: ActionType.FETCH_ALL_MAIL_ERROR,\n        payload: err.message\n      });\n    }\n  };\n}\n\nexport const toggleStar = (mailId : string) =>\n{\n  return async (dispatch: Dispatch<Action>) => {\n    dispatch({type: ActionType.TOGGLE_STAR , payload: mailId});\n    try {\n     await toggleStarOnServer(mailId);\n    \n    } catch (err) {\n      \n      dispatch({\n        type: ActionType.TOGGLE_STAR_ERROR,\n        payload: err.message\n      });\n    }\n  };\n}\n\nexport const sendMail = (msg: {\n  to: string[],\n  subject: string,\n  html: string\n  text: string | undefined\n}) =>\n{\n  return async (dispatch: Dispatch<Action>) => {\n\n    dispatch({type: ActionType.SEND_MAIL });\n    \n    try {\n      const res = (await sendMailFromServer(msg)).data as Mail;\n      console.log(res);\n      dispatch({type: ActionType.SEND_MAIL_COMPLETE , payload: res });\n    \n    } catch (err) {\n      console.log(\"star error: \" + err.message)\n      dispatch({\n        type: ActionType.SEND_MAIL_ERROR,\n        payload: err.message\n      });\n    }\n  };\n}\n\nexport const markAsRead = (mailId : string[] , isRead : boolean) =>\n{\n\n  return async (dispatch: Dispatch<Action>) => {\n    \n    try {\n     \n      await markAsReadOnServer(mailId , isRead);\n\n      dispatch({type: ActionType.MARK_AS_READ , payload:{ mailId , isRead }});\n    \n    } catch (err) {\n      \n      dispatch({\n        type: ActionType.MARK_AS_READ_ERROR,\n        payload: err.message\n      });\n    }\n  };\n}\n\nexport const toggleIsTrash = (mailId : string[]) =>\n{\n  return async (dispatch: Dispatch<Action>) => {\n    \n    dispatch({type: ActionType.TOGGLE_IS_TRASH , payload: mailId});\n    try {\n       await toggleIsTrashOnServer(mailId);\n      \n    } catch (err) {\n      \n      dispatch({\n        type: ActionType.TOGGLE_IS_TRASH_ERROR,\n        payload: err.message\n      });\n    }\n  };\n}\n\nexport const deleteMail = (mailId : string[]) =>\n{\n  return async (dispatch: Dispatch<Action>) => {\n    \n   \n    try {\n       await deleteMailOnServer(mailId);\n       dispatch({type: ActionType.DELETE_MAIL , payload: mailId});\n      \n    \n    } catch (err) {\n      \n      dispatch({\n        type: ActionType.DELETE_MAIL_ERROR,\n        payload: err.message\n      });\n    }\n  };\n}\n\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst drawerWidth = 200;\r\n\r\n const styles = () => makeStyles((theme) => {\r\n  const drawerWithClose = theme.spacing(7) + 1;\r\n\r\n  return {\r\n    root: {\r\n      display: \"flex\"\r\n    },\r\n    appBar: {\r\n      display: \"flex\",\r\n      width: `calc(100% - ${drawerWithClose}px)`,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen\r\n      })\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen\r\n      })\r\n    },\r\n    menuButton: {\r\n      marginRight: 36\r\n    },\r\n    hide: {\r\n      display: \"none\"\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: \"nowrap\"\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen\r\n      })\r\n    },\r\n\r\n    drawerClose: {\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen\r\n      }),\r\n      overflowX: \"hidden\",\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: drawerWithClose\r\n      }\r\n    },\r\n    toolbar: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      paddingTop: theme.spacing(3),\r\n      paddingLeft: theme.spacing(1)\r\n    },\r\n    AppBarRight: {\r\n      marginLeft: 10\r\n    },\r\n    AppbBarMiddle: {\r\n      flex: 1,  \r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      \r\n    },\r\n  search:{\r\n    display: \"flex\",\r\n    flex: 1,\r\n    marginLeft: 20,\r\n    maxWidth: 600,\r\n    minWidth: 200\r\n  },\r\n   input: {\r\n    marginLeft: theme.spacing(1),\r\n    //maxWidth: 200,\r\n    width: \"100%\"\r\n  },\r\n  iconButton: {\r\n    padding: 10\r\n  },\r\n  loc:{\r\n    backgroundColor: \"rgba(0, 0, 0, 0.1) !important\"\r\n  }\r\n  };\r\n});\r\n\r\nexport default styles;","import { useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { RootState } from '../state';\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../state';\n\nexport const useActions = () => {\n  const dispatch = useDispatch();\n\n  return useMemo(() => {\n    return bindActionCreators(actionCreators, dispatch);\n  }, [dispatch]);\n};\n","import{  useState } from 'react';\r\nimport clsx from \"clsx\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport makeStyles from './styles';\r\nimport { Button, Menu, MenuItem, Tooltip } from '@material-ui/core';\r\n\r\nimport { useTypedSelector } from '../hooks/use-typed-selector';\r\nimport { useActions } from '../hooks/use-actions';\r\n\r\n\r\n\r\nconst useStyles = makeStyles();\r\n\r\n\r\nexport default function MyAppBar() {\r\n\r\n  const classes = useStyles();\r\n\r\n  const {logout} = useActions();\r\n\r\n  const username  = useTypedSelector((state) => {\r\n    return state.user?.username;\r\n  });\r\n\r\n  const  firstChar = useTypedSelector((state) => {\r\n    return state.user?.firstChar;     \r\n  });\r\n\r\n  const open = useTypedSelector((state) => {\r\n    return state.control?.sideBarOpen;\r\n  });\r\n\r\n  \r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event: any) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setAnchorEl(null);\r\n    logout();\r\n  };\r\n\r\n  return (\r\n    <div >\r\n       <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open\r\n        })}\r\n      >\r\n        <Toolbar>\r\n        <Typography variant=\"h6\" noWrap>\r\n            Rabany Mail\r\n          </Typography>\r\n          \r\n\r\n        <div className={classes.AppbBarMiddle}>\r\n\r\n           </div>\r\n          \r\n          <div className = {classes.AppBarRight}>\r\n          <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}> \r\n        <Tooltip title={`${username}@rabanymail.com`} aria-label=\"add\">  \r\n        <Avatar> {firstChar}  </Avatar>\r\n       </Tooltip>\r\n       </Button>\r\n       <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <Typography style={{margin: 10}} variant =\"h5\" > {`${username}@rabanymail.com`} </Typography>\r\n        <MenuItem onClick={handleLogout}>\r\n          \r\n        <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n          Logout\r\n          </Button>\r\n          </MenuItem>\r\n      </Menu>\r\n\r\n        </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import { IconButton, Tooltip } from \"@material-ui/core\"\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport RestoreFromTrashIcon from '@material-ui/icons/RestoreFromTrash';\r\n\r\ntype fontSize = \"default\" | \"small\" | \"inherit\" | \"large\" | undefined;\r\n\r\nconst TrashIcons = ({isTrash ,fontSize , onClickTrash , onClickDelete}: {\r\n  isTrash: boolean,\r\n  fontSize?: fontSize,\r\n  onClickTrash: () => void,\r\n  onClickDelete: () => void,\r\n})  => {\r\n  \r\n  return  isTrash \r\n  ? \r\n  <>\r\n    <Tooltip title=\"Restore\" aria-label=\"Restore\">\r\n    <IconButton onClick = {onClickTrash}>\r\n      <RestoreFromTrashIcon fontSize={fontSize}/>\r\n    </IconButton>\r\n  </Tooltip>\r\n\r\n  <Tooltip title=\"Delete\" aria-label=\"Delete\">\r\n    <IconButton onClick = {onClickDelete} >\r\n      <DeleteForeverIcon fontSize={fontSize} />\r\n    </IconButton>\r\n  </Tooltip>\r\n  </>\r\n  :\r\n  \r\n  <Tooltip title=\"move to trash\" aria-label=\"move to trash\">\r\n    <IconButton onClick = {onClickTrash}>\r\n      <DeleteIcon fontSize={fontSize} />\r\n   </IconButton>\r\n  </Tooltip>\r\n  \r\n\r\n}\r\n\r\nexport default TrashIcons;","import  {  useState } from 'react';\r\nimport { Checkbox, IconButton } from '@material-ui/core';\r\nimport StarBorderRoundedIcon from '@material-ui/icons/StarBorderRounded';\r\nimport StarRoundedIcon from '@material-ui/icons/StarRounded';\r\nimport './MailListItem.css';\r\nimport moment from 'moment';\r\nimport { Link  } from 'react-router-dom';\r\nimport { useActions } from \"../hooks/use-actions\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport clsx from \"clsx\";\r\nimport { useTypedSelector } from '../hooks/use-typed-selector';\r\nimport TrashIcons from './TrashIcons';\r\nimport {Mail} from \"../state/Mail\";\r\n\r\ninterface MailListItemProps {\r\n    mail : Mail; \r\n    location: string\r\n}\r\n\r\nconst MailListItem = ({mail ,  location }: MailListItemProps) => {\r\n\r\n   \r\nconst {toggleStar ,markAsRead , toggleIsTrash , deleteMail} = useActions();\r\nconst [hover, setHover] = useState(false);\r\n\r\n const { toggleMailCheckbox} = useActions();\r\n\r\n\r\n  const checked = useTypedSelector((state) => {\r\n   return state.mail?.checked.has(mail._id);\r\n  }) || false;\r\n\r\n  const handleCheck =  () => {\r\n    toggleMailCheckbox(mail._id);\r\n  };\r\n\r\n    const handleClickStar = () => {\r\n        toggleStar(mail._id);\r\n        \r\n    }\r\n\r\n    const handleClickTrash = () => {\r\n        toggleIsTrash([mail._id]);\r\n        \r\n    }\r\n\r\n    const handleClickDelete = () => {\r\n        deleteMail([mail._id]);\r\n        \r\n    }\r\n\r\n    const handleClickIsRead = () => {\r\n        markAsRead([mail._id] , !mail.isRead);\r\n        \r\n    }\r\n\r\n    const handleClickIsMail = () => {\r\n        if(!mail.isRead)\r\n        markAsRead([mail._id] , true);\r\n        \r\n    }\r\n\r\n    const MarkAsReadOrUnreadIcon = () => (\r\n        !mail.isRead \r\n        ?\r\n        <Tooltip title=\"Mark as read\" aria-label=\"Mark as read\">\r\n            <IconButton onClick = {handleClickIsRead}>\r\n                <DraftsIcon  />\r\n            </IconButton>\r\n        </Tooltip>  \r\n        :\r\n        <Tooltip title=\"Mark as unread\" aria-label=\"Mark as unread\">\r\n            <IconButton onClick = {handleClickIsRead}>\r\n                <EmailIcon  />\r\n            </IconButton>\r\n        </Tooltip> \r\n        \r\n        )\r\n\r\n\r\n  return (\r\n    <div className={clsx(\"emailRow\", {\r\n        \"readMark\": mail.isRead,\r\n      })}>\r\n        <div className=\"emailRow_options\">\r\n            <Checkbox checked = {checked} onClick={handleCheck}/>\r\n            <IconButton onClick = {handleClickStar}>\r\n            { mail.isStarred \r\n                ? <StarRoundedIcon fontSize = \"large\"/>\r\n                : <StarBorderRoundedIcon fontSize = \"large\"/>}\r\n            </IconButton>\r\n\r\n        </div>\r\n        \r\n        \r\n    <Link \r\n        onClick={handleClickIsMail} \r\n        className=\"clickable\" \r\n        to={`/mail/${location}/${mail._id}`} \r\n        style={{ textDecoration: 'none' , color: \"inherit\" }}\r\n        onMouseEnter = {() => {setHover(true)}}\r\n        onMouseLeave={() => {setHover(false)}}>\r\n        \r\n        <div className=\"emailRow_title\" >\r\n            <h3>\r\n                {mail.isOutbound ? `To:${mail.to[0]}` : mail.from }\r\n            </h3>\r\n        </div>\r\n        \r\n        <div className=\"emailRow_message\">\r\n            <h4>\r\n                {mail.subject}\r\n                <span className=\"emailRow_description\"> - {\" \"}\r\n                    {mail.text}\r\n                </span>\r\n            </h4>\r\n        </div>\r\n\r\n    </Link>\r\n        <div \r\n            onMouseEnter = {() => {setHover(true)}} \r\n            onMouseLeave={() => {setHover(false)}}>\r\n            \r\n            <div className=\"emailRow_time\">\r\n        \r\n            {!hover \r\n                ?\r\n                <h4>{moment(mail.created).format(\"MMM Do\") }</h4>\r\n                :\r\n                <>\r\n                < TrashIcons\r\n                    isTrash = {mail.isTrash}\r\n                    fontSize = {\"large\"}\r\n                    onClickTrash = {handleClickTrash}\r\n                    onClickDelete = {handleClickDelete}\r\n                />\r\n                    \r\n                    <MarkAsReadOrUnreadIcon/>   \r\n                </>\r\n        }\r\n\r\n            </div>\r\n        </div>\r\n       \r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MailListItem;","import { Mail } from '../state/Mail';\r\nimport { useTypedSelector } from './use-typed-selector';\r\n\r\nconst useMailBox = () => {\r\n  return useTypedSelector((state) => {\r\n    if(state.control?.location === \"inbox\") return state.mail?.mail.filter(mail => !mail.isOutbound && !mail.isTrash).reverse();\r\n    if(state.control?.location === \"starred\") return state.mail?.mail.filter(mail => mail.isStarred && !mail.isTrash).reverse();\r\n    if(state.control?.location === \"sent\") return state.mail?.mail.filter(mail => mail.isOutbound && !mail.isTrash).reverse();\r\n    if(state.control?.location === \"allmail\") return state.mail?.mail.filter(mail => !mail.isTrash).reverse();\r\n    if(state.control?.location === \"trash\") return state.mail?.mail.filter(mail => mail.isTrash).reverse();    \r\n    return [];\r\n  }) as Mail[];\r\n}\r\n\r\nexport default useMailBox;","\r\nimport  { useEffect} from 'react';\r\nimport { Checkbox, IconButton, Tooltip } from '@material-ui/core';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport './MailList.css';\r\nimport MailListItem from './MailListItem';\r\nimport TrashIcons from './TrashIcons';\r\nimport { useActions } from \"../hooks/use-actions\";\r\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\r\nimport  useMailBox  from \"../hooks/use-mail-box\";\r\nimport {Mail} from \"../state/Mail\";\r\n\r\ninterface MailListProps {\r\n  match: {\r\n    params: {\r\n      location: string\r\n    }\r\n  }\r\n}\r\n\r\nexport default function MailList( {match }: MailListProps) {\r\n\r\n\r\n  const location = match.params.location;\r\n\r\n  const {setLocation ,fetchAllMail , toggleAllMailCheckbox , toggleIsTrash , deleteMail , markAsRead} = useActions();\r\n\r\n  const mailList = useMailBox();\r\n\r\n\r\n  const checkAll = useTypedSelector((state) => {\r\n    return state.mail?.checked;\r\n   }) || new Set();\r\n\r\n\r\nuseEffect(() => {\r\n  setLocation(location);\r\n  toggleAllMailCheckbox(mailList ,true);\r\n  if(location === \"inbox\")\r\n  fetchAllMail();\r\n  },[setLocation, toggleAllMailCheckbox, fetchAllMail, location ] );\r\n\r\n  const refresh = () => {\r\n    fetchAllMail();\r\n  }\r\n\r\n  const handleCheckAll =  () => {\r\n    toggleAllMailCheckbox(mailList);\r\n  };\r\n\r\n  const handleClickTrash = () => {\r\n    toggleAllMailCheckbox(mailList,true);\r\n    toggleIsTrash(Array.from(checkAll));\r\n    } \r\n\r\n  const handleClickDelete = () => {\r\n  toggleAllMailCheckbox(mailList,true);\r\n  deleteMail(Array.from(checkAll));\r\n  \r\n  }\r\n\r\n  const handleClickRead = () => {\r\n  markAsRead(Array.from(checkAll) , true);\r\n  }\r\n\r\n  const handleClickUnRead = () => {\r\n  markAsRead(Array.from(checkAll) , false);\r\n  }\r\n\r\n  const RefreshIconTooltip = () =>\r\n  <Tooltip title=\"Refresh\" aria-label=\"Refresh\"> \r\n    <IconButton onClick = {refresh}>\r\n      <RefreshIcon />\r\n    </IconButton>\r\n  </Tooltip> \r\n\r\n\r\n\r\n  return (\r\n    <div className=\"emailList\">\r\n        <div className=\"emailList_settings\">\r\n            <div className=\"emailList_settingsLeft\">\r\n                <Checkbox  checked={checkAll.size !== 0} onClick = {handleCheckAll}/>\r\n                {!checkAll.size \r\n                ?\r\n                <RefreshIconTooltip/>\r\n                :\r\n                 <>\r\n      \r\n                <TrashIcons\r\n                isTrash = {location === \"trash\"}\r\n                onClickTrash = {handleClickTrash}\r\n                onClickDelete = {handleClickDelete}\r\n                />\r\n                 \r\n                <Tooltip title=\"Mark as read\" aria-label=\"Mark as read\">\r\n                  <IconButton onClick = {handleClickRead}>\r\n                    <DraftsIcon  />\r\n                  </IconButton>\r\n                </Tooltip>  \r\n        \r\n                <Tooltip title=\"Mark as unread\" aria-label=\"Mark as unread\">\r\n                  <IconButton onClick = {handleClickUnRead}>\r\n                      <EmailIcon />\r\n                   </IconButton>\r\n                </Tooltip> \r\n                </>\r\n              }\r\n\r\n            </div>\r\n         \r\n        </div>\r\n\r\n        <div className=\"emailList_list\">\r\n            {mailList.map((mail) => (\r\n                <MailListItem key={mail._id} mail={mail} location={location}/>\r\n            ))}\r\n        </div>\r\n    </div>\r\n);\r\n}\r\n","import clsx from \"clsx\";\r\nimport { Link } from 'react-router-dom';\r\nimport makeStyles from './styles';\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\r\nimport { useActions } from \"../hooks/use-actions\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport StarRoundedIcon from '@material-ui/icons/StarRounded';\r\nimport PresentToAllIcon from '@material-ui/icons/PresentToAll';\r\n\r\n\r\n\r\nconst useStyles = makeStyles();\r\n\r\nconst SideMenu = () => {\r\n  \r\n  const classes = useStyles();\r\n\r\n  const {openComposeMail ,toggleSideBar ,setLocation} = useActions();\r\n  \r\n  const open = useTypedSelector(state => state.control?.sideBarOpen); \r\n\r\n  const location = useTypedSelector(state => state.control?.location); \r\n\r\n\r\n  return (\r\n    <div>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open\r\n          })\r\n        }}\r\n      >\r\n\r\n      <div className={classes.toolbar}>\r\n        <IconButton onClick={toggleSideBar} >\r\n          {open ? (\r\n            <ChevronLeftIcon />\r\n          ) : (\r\n            <ChevronRightIcon />\r\n          )}\r\n        </IconButton>\r\n      </div>\r\n      \r\n      <Divider />\r\n      \r\n      <List>\r\n        {[\r\n          [\"Inbox\", <InboxIcon />],\r\n          [\"Starred\", <StarRoundedIcon/>] ,\r\n          [\"Sent\" , <PresentToAllIcon/>],\r\n          [\"All mail\" , <MailIcon /> ],\r\n          [\"trash\",<DeleteIcon/>],\r\n        ].map((text : any, index) => {    \r\n          const locationFromArray = text[0].toLocaleLowerCase().replaceAll( ' ', '');\r\n          return (\r\n            <Link to={'/mail/' + locationFromArray} \r\n                  style={{ textDecoration: 'none' , color: \"inherit\" }} \r\n                  key={text}>\r\n                    \r\n              <ListItem \r\n                button key={text} \r\n                className={clsx({[classes.loc]: locationFromArray === location})}\r\n                onClick= {() => { setLocation(locationFromArray)}}\r\n              >\r\n                <ListItemIcon>\r\n                  {text[1]}\r\n                </ListItemIcon>\r\n                <ListItemText primary={text[0]} />\r\n              \r\n              </ListItem>\r\n            </Link>\r\n            )\r\n          }\r\n          \r\n          )}\r\n           \r\n        <Divider />\r\n        <ListItem ></ListItem> \r\n        <ListItem button key={\"compose\"} onClick={openComposeMail}>\r\n          <ListItemIcon>\r\n            <InboxIcon /> \r\n          </ListItemIcon>\r\n          <ListItemText primary={\"compose\"} />\r\n        </ListItem>\r\n      </List>\r\n\r\n       \r\n        \r\n    \r\n    </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideMenu;\r\n","\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport EmailIcon from '@material-ui/icons/Email';\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport './MailPage.css';\nimport moment from 'moment';\nimport { useTypedSelector } from '../hooks/use-typed-selector';\nimport { useActions } from '../hooks/use-actions';\nimport TrashIcons from './TrashIcons';\nimport parse from 'html-react-parser';\n\ninterface MailPageProps {\n  match: {\n    params: {\n      mailID: string\n    }\n  }\n}\n\nconst MailPage = ({match} : MailPageProps) => {\n    \n    const { toggleIsTrash , deleteMail , markAsRead ,setLocation} = useActions();\n    const history = useHistory();\n\n    const mail = useTypedSelector((state) => {\n        return state.mail?.mail.find( mail => mail._id === match.params.mailID);\n      });\n\n      const handleClickTrash = () => {\n        if(mail) {\n        toggleIsTrash([mail._id]);\n        setLocation(\"trash\");\n        history.push(`/mail/trash/${mail._id}`);\n        }\n      }\n      \n      const handleClickDelete = () => {\n        if(mail) {\n          deleteMail([mail._id]);\n          history.push(`/mail/trash`);\n        }\n      }\n      \n     \n      const handleClickUnRead = () => {\n        if(mail)\n        markAsRead([mail._id] , false);\n        history.goBack();\n\n      }\n\n\n    if(!mail) return <></>;\n    return (\n      <div className=\"mail\">\n        <div className=\"mail_tools\">\n          <div className=\"mail_toolsLeft\">\n            <IconButton onClick = {history.goBack}>\n              <ArrowBackIcon />\n            </IconButton>\n                    \n            < TrashIcons\n              isTrash = {mail.isTrash}\n              onClickTrash = {handleClickTrash}\n              onClickDelete = {handleClickDelete}\n            />\n\n            <Tooltip title=\"Mark as unread\" aria-label=\"Mark as unread\">\n              <IconButton onClick = {handleClickUnRead}>\n                <EmailIcon />\n              </IconButton>\n            </Tooltip> \n               \n          </div>\n\n          <div className=\"mail_toolsRight\">\n          </div>\n        </div>\n            \n        <div className=\"mail_body\">\n          <div className=\"mail_bodyHeader\">\n            <h2>{mail.subject}</h2> \n            <LabelImportantIcon className=\"mail_important\" />\n            <p>{mail.from}</p>\n            <p className=\"mail_time\">{moment(mail.created).format('MM/DD/YYYY')}</p>\n          </div>\n\n          <div className=\"mail_message\">\n             {parse(mail.html)}\n          </div>\n      </div>\n    </div>\n    )\n}\n\nexport default MailPage;","import { useRef } from 'react';\r\nimport './ComposeMail.css';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button } from '@material-ui/core';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useActions } from '../hooks/use-actions';\r\nimport 'froala-editor/css/froala_editor.pkgd.min.css';\r\nimport FroalaEditor from 'react-froala-wysiwyg';\r\n\r\n\r\n\r\nconst ComposeMail = () => {\r\n\r\n    const { register, handleSubmit } = useForm();\r\n\r\n    const {closeComposeMail , sendMail} = useActions();\r\n    const html = useRef('');\r\n\r\n    const onSubmit = (data:any) => {\r\n       data.to = [data.to];\r\n       data.html = html.current;\r\n       sendMail(data);\r\n       closeComposeMail();\r\n    };\r\n\r\n    const onChange = (data:any) => {\r\n      html.current = data;\r\n   };\r\n\r\n   \r\n    return (\r\n        <div className=\"sendMail\">\r\n            <div className=\"sendMail_header\">\r\n                <h3>New Message</h3>\r\n                <CloseIcon className=\"sendMail_close\" onClick={closeComposeMail} />\r\n            </div>\r\n            \r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                <input name=\"to\" type=\"email\" placeholder=\"To\" ref={register({required: true})} />\r\n                <input name=\"subject\" type=\"text\" placeholder=\"Subject\" ref={register()} />\r\n                  \r\n                <FroalaEditor\r\n                    config={{\r\n                    attribution: false,\r\n                    height: 300,\r\n                    quickInsertTags: ['p', 'div'],\r\n                    listAdvancedTypes: true\r\n                    }}\r\n                    onModelChange={onChange}\r\n                /> \r\n                \r\n                <div className=\"sendMail_options\">\r\n                    <Button \r\n                        type=\"submit\"\r\n                        className=\"sendMail_send\" \r\n                        variant=\"contained\" \r\n                        color=\"primary\">\r\n                    Send\r\n                    </Button>\r\n                </div>\r\n            </form> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComposeMail;","import { Switch, Route, Redirect } from 'react-router-dom';\r\nimport makeStyles from './styles';\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"./MyAppBar\";\r\nimport MailList from \"./MailList\";\r\nimport SideMenu from \"./SideMenu\";\r\nimport MailPage from \"./MailPage\";\r\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\r\nimport ComposeMail from \"./ComposeMail\";\r\n\r\nconst useStyles = makeStyles();\r\n\r\nconst List = () => {\r\n  \r\n  const composeMail = useTypedSelector(state =>  state.control?.composeMailOpen);\r\n\r\n  return <>         \r\n  <Switch>\r\n    <Route path=\"/mail/:location\" exact component ={MailList}/> \r\n    <Route path=\"/mail/:location/:mailID\"  component={MailPage}/>\r\n    \r\n    <Route path=\"/\" >\r\n      <Redirect to=\"/mail/inbox\"/>\r\n    </Route>\r\n  </Switch>\r\n  {composeMail && <ComposeMail/>}\r\n  </>\r\n}\r\n\r\nconst Mail = () => {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar/>\r\n      <SideMenu/>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar}/>\r\n        <List/>\r\n      </main>\r\n    </div> \r\n  );\r\n}\r\n\r\nexport default Mail;\r\n","\r\nconst dimensions = \"150\";\r\n\r\nconst RabanyMailLogo = () => {\r\n\r\n  return <img\r\n  src= \"/rabany mail-logo.jpg\"\r\n  alt = \"Rabany mail logo\"\r\n  width={dimensions}\r\n  height={dimensions}\r\n/>\r\n}\r\n\r\nexport default RabanyMailLogo","import React, { useState } from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link } from 'react-router-dom';\r\nimport { registerServer } from '../helpers/user';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RabanyMailLogo from './RabanyMailLogo';\r\nimport { PersonalVideo } from '@material-ui/icons';\r\n\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link  to={'/'} style={{ textDecoration: 'none' , color: \"inherit\" }}>\r\n        Rabany Mail\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [singUpUsername, setSingUpUsername] = useState(\"\");\r\n  const [singUpPassword, setSingUpnPassword] = useState(\"\");\r\n  const [singUpPasswordConfirm, setSingUpPasswordConfirm] = useState(\"\");\r\n\r\n  const [singUpUsernameError, setSingUpUsernameError] = useState(undefined);\r\n  const [singUpPasswordError, setSingUpnPasswordError] = useState(undefined );\r\n  const [singUpPasswordConfirmError, setSingUpPasswordConfirmError] = useState(undefined);\r\n\r\n  const signUpOnServer = async (e:React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setSingUpUsername(prev => prev.trim());\r\n    const errors = (await registerServer(singUpUsername.trim(), singUpPassword, singUpPasswordConfirm)).data;\r\n    console.log(errors);\r\n    \r\n    if(errors.length){\r\n    setSingUpUsernameError(errors.find((e: {param: string}) => e.param === \"username\")?.msg )\r\n    setSingUpnPasswordError(errors.find((e: {param: string}) => e.param === \"password\")?.msg )\r\n    setSingUpPasswordConfirmError(errors.find((e: {param: string}) => e.param === \"passwordConfirm\")?.msg )\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }\r\n  \r\n  \r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        \r\n      <RabanyMailLogo/>\r\n\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={signUpOnServer}>\r\n          <Grid container spacing={2}>\r\n \r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"User Name\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                onChange = {e => setSingUpUsername(e.target.value)}\r\n                value = {singUpUsername}\r\n                helperText= {singUpUsernameError}\r\n                error = {singUpUsernameError ? true : false}\r\n              />\r\n                </Grid>\r\n         \r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange = {e => setSingUpnPassword(e.target.value)}\r\n                value = {singUpPassword}\r\n                helperText= {singUpPasswordError}\r\n                error = {singUpPasswordError ? true : false}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password-confirm\"\r\n                label=\"password confirm\"\r\n                type=\"password\"\r\n                id=\"password-confirm\"\r\n                autoComplete=\"current-password\"\r\n                onChange = {e => setSingUpPasswordConfirm(e.target.value)}\r\n                value = {singUpPasswordConfirm}\r\n                helperText= {singUpPasswordConfirmError}\r\n                error = {singUpPasswordConfirmError ? true : false}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-start\">\r\n            <Grid item>\r\n            <Link  to={'/login'} style={{ textDecoration: 'none' , color: \"inherit\" }}>\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n\r\n\r\n}","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useActions } from '../hooks/use-actions';\r\nimport { useTypedSelector } from '../hooks/use-typed-selector';\r\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\r\nimport RabanyMailLogo from './RabanyMailLogo';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link  to={'/'} style={{ textDecoration: 'none' , color: \"inherit\" }}>\r\n        Rabany Mail\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  alert:{\r\n    marginBottom:0,\r\n    marginRight: 10,\r\n    marginTop: 20,\r\n    minHeight: 0,\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    padding: \"9px 12px 9px 20px\",\r\n    borderWidth: \"1px 1px 1px 0px\",\r\n    borderStyle: \"solid\",\r\n    borderRadius: 6,\r\n    fontSize: 14,\r\n    lineHeight: 3,\r\n    color: \"rgb(143, 34, 27)\",\r\n    borderColor: \"rgb(249, 211, 197) rgb(249, 211, 197) rgb(249, 211, 197) rgb(207, 74, 34)\",\r\n    backgroundColor: \"rgb(252, 235, 226)\",\r\n  },\r\n  alertText:{\r\n \r\n  alignSelf: \"center\",\r\n  mozBoxFlex: 1,\r\n  flexGrow: 1,\r\n  marginLeft: 15,\r\n  marginRight: 10,\r\n  color: \"rgb(207, 74, 34)\",\r\n  }\r\n  \r\n\r\n}));\r\n\r\nconst SignIn = () => {\r\n  const classes = useStyles();\r\n  const {login} = useActions();\r\n\r\n  const fail = useTypedSelector((state) => {\r\n    return state.user?.fail;\r\n   });\r\n\r\n  const [loginUsername, setLoginUsername] = useState(\"\");\r\n  const [loginPassword, setLoginPassword] = useState(\"\");\r\n  \r\n  const signInOnServer = (e:React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    login(loginUsername , loginPassword)\r\n  }\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n\r\n        <RabanyMailLogo/>\r\n        <Typography component=\"h1\" variant=\"h5\" >\r\n          Sign in\r\n          </Typography>\r\n         {fail && <div role=\"alert\" className={classes.alert}  data-testid=\"bannerAuthCodeError\">\r\n         <WarningRoundedIcon style={{marginTop: 8}}/>\r\n            \r\n            <span className= {classes.alertText}>\r\n              Please provide a valid username and password.\r\n            </span>\r\n            \r\n            </div>}\r\n      \r\n        <form className={classes.form} noValidate onSubmit={signInOnServer}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"User Name\"\r\n            name=\"username\"\r\n            //autoComplete=\"username\"\r\n            autoFocus\r\n            value = {loginUsername}\r\n            error={fail}\r\n            onChange = {e => setLoginUsername(e.target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value = {loginPassword}\r\n            error={fail}\r\n            onChange = {e => setLoginPassword(e.target.value)}\r\n          />\r\n    \r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n           \r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            \r\n            <Grid item>\r\n            <Link  to={'/signup'} style={{ textDecoration: 'none' , color: \"inherit\" }}>\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignIn;","\r\nimport Mail from './Mail';\r\nimport {  Switch, Route, Redirect } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport SignUp from './SignUp';\r\nimport SignIn from './SignIn';\r\nimport { useActions } from '../hooks/use-actions';\r\nimport { useTypedSelector } from '../hooks/use-typed-selector';\r\n\r\nconst App  = () => {\r\n  \r\n  const {getUser , fetchAllMail} = useActions();\r\n  \r\n  const username  = useTypedSelector((state) => {\r\n    return state.user?.username \r\n  });\r\n\r\n  useEffect(() => {\r\n    if(username) {\r\n      fetchAllMail();\r\n    } else {\r\n      getUser();\r\n    }\r\n  },[username , getUser , fetchAllMail]);\r\n\r\n  //before reaching the server for user\r\n   if (username === undefined) return <></> ;\r\n   \r\n   //if no user is login\r\n   if (!username) {\r\n    return <>\r\n        <Switch>\r\n       \r\n          <Route path=\"/login\"  component ={SignIn}/>\r\n          <Route path=\"/signup\" component ={SignUp}/>\r\n        \r\n          <Route path=\"/\" >\r\n            <Redirect to=\"/login\"/>\r\n          </Route>\r\n\r\n        </Switch>\r\n    </>\r\n   }\r\n \r\n  return <Mail/>\r\n \r\n  }\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { BrowserRouter as Router} from 'react-router-dom';\nimport { store } from './state';\nimport { Provider } from 'react-redux';\n\n\nconst RabanyMail  = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <App/>\n      </Router>\n    </Provider>\n  );\n}\n\n\nReactDOM.render(<RabanyMail/>, document.querySelector('#root'));\n\n\n","export enum ActionType {\n  TOGGLE_SIDEBAR = \"toggle_sideBar\",\n  OPEN_COMPOSE_MAIL = \"open_compose_mail\",\n  CLOSE_COMPOSE_MAIL = \"close_compose_mail\",\n  LOGIN = \"login\",\n  LOGIN_SUCCESS = 'login_success',\n  LOGIN_FAIL = 'login_fail',\n  LOGIN_ERROR = 'login_error',\n  GET_USER = \"get_user\",\n  GET_USER_COMPLETE = \"get_user_complete\",\n  GET_USER_ERROR = \"get_user_error\",\n  LOGOUT = \"logout\",\n  LOGOUT_COMPLETE = 'logout_complete',\n  LOGOUT_ERROR = 'logout_error',\n  FETCH_ALL_MAIL = 'fetch_inbox',\n  FETCH_ALL_MAIL_COMPLETE = 'fetch_all_mail_complete',\n  FETCH_ALL_MAIL_ERROR = 'fetch_inbox_error',\n  FETCH_INBOX = 'fetch_inbox',\n  FETCH_INBOX_COMPLETE = 'fetch_inbox_complete',\n  FETCH_INBOX_ERROR = 'fetch_inbox_error',\n  TOGGLE_STAR = \"toggle_star\",\n  TOGGLE_STAR_ERROR = 'toggle_star_error',\n  SEND_MAIL = \"send_mail\",\n  SEND_MAIL_COMPLETE = \"send_mail_complete\",\n  SEND_MAIL_ERROR = \"send_mail_error\",\n  SET_LOCATION = \"set_location\",\n  MARK_AS_READ = \"mark_as_read\",\n  MARK_AS_READ_ERROR = \"mark_as_read_error\",\n  TOGGLE_IS_TRASH = \"toggle_is_trash\",\n  TOGGLE_IS_TRASH_ERROR = 'toggle_is_trash_error',\n  DELETE_MAIL = \"delete_mail\",\n  DELETE_MAIL_ERROR = \"delete_mail_error\",\n  TOGGLE_MALI_CHECKBOX = \"toggle_mail_checkbox\",\n  TOGGLE_ALL_MALI_CHECKBOX = \"toggle_all_mail_checkbox\",\n}\n","import Axios from 'axios';\r\n\r\nconst localUrl = \"http://localhost:7777\"\r\nconst serverUrl = \"https://rabany-mail.herokuapp.com\"\r\n\r\nconst url = serverUrl;\r\n\r\nexport const loginSever = (username: string , password: string) => {\r\n  return Axios({\r\n   method: \"POST\",\r\n   data: {\r\n     username,\r\n     password,\r\n   },\r\n   withCredentials: true,\r\n   url: url + \"/login\",\r\n});\r\n}\r\n\r\nexport const logoutServer = () => {\r\n return Axios({\r\n   method: \"GET\",\r\n   withCredentials: true,\r\n   url: url + \"/logout\",\r\n});\r\n}\r\n\r\nexport const getUserFromServer = () => {\r\nreturn Axios({\r\n   method: \"GET\",\r\n   withCredentials: true,\r\n   url: url + \"/user\",\r\n });\r\n}\r\n\r\nexport const registerServer = (username: string , password: string , passwordConfirm:string) => {\r\n  return Axios({\r\n   method: \"POST\",\r\n   data: {\r\n     username,\r\n     password,\r\n     passwordConfirm,\r\n   },\r\n   withCredentials: true,\r\n   url: url + \"/register\",\r\n});\r\n}","import produce from 'immer';\nimport { ActionType } from '../action-types';\nimport { Action } from '../actions';\n\ninterface UserState {\n  loading: boolean;\n  fail: boolean;\n  error: string | null;\n  username: string | undefined;\n  firstChar: string;\n}\n\nconst initialState: UserState = {\n  loading: true,\n  fail: false,\n  error: null,\n  username: undefined,\n  firstChar: \"\",\n};\n\nconst reducer = produce((state: UserState = initialState, action: Action) => {\n  switch (action.type) {\n    case ActionType.LOGIN:\n      state.loading = true;\n      return\n\n    case ActionType.LOGIN_SUCCESS:\n      state.loading = false;\n      state.fail = false;\n      state.username = action.payload.username;\n      state.firstChar = action.payload.firstChar;\n      return\n\n    case ActionType.LOGIN_FAIL:\n      state.loading = false;\n      state.fail = true;\n\n      return;\n\n    case ActionType.LOGIN_ERROR:\n      state.loading = false;\n      state.error = action.payload;\n      return\n\n\n      //may be useless\n    case ActionType.GET_USER:\n      state.loading = true;\n      return\n  \n    case ActionType.GET_USER_COMPLETE:\n      state.loading = false;\n      state.fail = false;\n      state.username = action.payload.username;\n      state.firstChar = action.payload.firstChar;\n      return\n  \n    case ActionType.GET_USER_ERROR:\n      state.loading = false;\n      state.error = action.payload;\n      return  \n      \n    case ActionType.LOGOUT:\n      state.loading = true;\n      return\n    \n    case ActionType.LOGOUT_COMPLETE:\n      state.loading = false;\n      state.username = \"\";\n      state.firstChar = \"\";\n      return\n    \n    case ActionType.LOGOUT_ERROR:\n      state.loading = false;\n      state.error = action.payload;\n      return  \n  \n    default:\n      return state;\n  }\n});\n\n\nexport default reducer;\n","import produce , { enableMapSet } from 'immer';\nimport { ActionType } from '../action-types';\nimport { Action } from '../actions';\nimport { Mail } from '../Mail';\n\n\nenableMapSet();\n\ninterface MailState {\n  loading: boolean;\n  sending: boolean\n  error: string | null;\n  mail: Mail[];\n  checked: Set<string>;\n}\n\nconst initialState: MailState = {\n  loading: false,\n  sending: false,\n  error: null,\n  mail: [],\n  checked: new Set(),\n};\n\nconst reducer = produce((state: MailState = initialState, action: Action) => {\n  \n\n  switch (action.type) {\n      \n    case ActionType.FETCH_INBOX:\n      state.loading = true;\n      return\n\n    case ActionType.FETCH_INBOX_COMPLETE:\n      state.loading = false;\n     // state.inbox = action.payload;\n      return\n\n    case ActionType.FETCH_INBOX_ERROR:\n      state.loading = false;\n      state.error = action.payload;\n      return\n\n    case ActionType.FETCH_ALL_MAIL:\n        state.loading = true;\n        return\n  \n    case ActionType.FETCH_ALL_MAIL_COMPLETE:\n      state.loading = false;\n      state.mail = action.payload;\n      return\n  \n      case ActionType.FETCH_ALL_MAIL_ERROR:\n        state.loading = false;\n        state.error = action.payload;\n        return  \n\n    case ActionType.TOGGLE_STAR: {\n      const mailId = action.payload;\n      const index = state.mail.findIndex(mail => mail._id === mailId)\n      const newToggle = !state.mail[index].isStarred\n      state.mail[index] = {...state.mail[index] , isStarred: newToggle }\n      return\n    }\n    case ActionType.TOGGLE_STAR_ERROR: \n      state.error = action.payload;\n    \n      return\n\n    case ActionType.MARK_AS_READ: {\n      const {mailId , isRead} = action.payload;\n      for(const id of mailId) {\n      const index = state.mail.findIndex(mail => mail._id === id)\n      state.mail[index] = {...state.mail[index] , isRead: isRead }\n      }\n      return\n    }\n\n    case ActionType.SEND_MAIL:\n      state.sending = true;\n      return\n    \n    case ActionType.SEND_MAIL_COMPLETE:\n      state.sending = false;\n      state.mail.push(action.payload);\n      return\n    \n    case ActionType.SEND_MAIL_ERROR:\n      state.sending = false;\n      state.error = action.payload;\n      return\n\n    case ActionType.MARK_AS_READ_ERROR:\n      state.error = action.payload;\n      return\n\n    case ActionType.TOGGLE_IS_TRASH: {\n      const mailId = action.payload;\n      for(const id of mailId) {\n      const index = state.mail.findIndex(mail => mail._id === id)\n      const newToggle = !state.mail[index].isTrash;\n      state.mail[index] = {...state.mail[index] , isTrash: newToggle }\n      }\n      return\n    }\n    \n    case ActionType.TOGGLE_IS_TRASH_ERROR: \n      state.error = action.payload;\n      return\n\n    case ActionType.DELETE_MAIL: {\n      const mailId = action.payload;\n      const filletedMail = [];\n      for(const mail of state.mail) {\n      if(!mailId.includes(mail._id))\n      filletedMail.push(mail);\n      }\n      state.mail = filletedMail;\n      return \n  \n    }\n      \n    case ActionType.DELETE_MAIL_ERROR: \n      state.error = action.payload;\n      return\n    \n    case ActionType.TOGGLE_ALL_MALI_CHECKBOX:\n      if(state.checked.size || action.payload.reset){\n        state.checked = new Set();\n      } else {\n        state.checked = new Set(action.payload.mailList.map(mail => mail._id));\n      }\n      return\n\n    case ActionType.TOGGLE_MALI_CHECKBOX:\n        if(state.checked.has(action.payload)){\n          state.checked.delete(action.payload);\n        } else {\n          state.checked.add(action.payload);\n        }\n        return\n\n    default:\n      return state;\n  }\n});\n\n\nexport default reducer;\n","import produce from 'immer';\nimport { ActionType } from '../action-types';\nimport { Action } from '../actions';\n\ninterface ControlState {\n  sideBarOpen: boolean;\n  composeMailOpen: boolean;\n  location: string;\n\n}\n\nconst initialState: ControlState = {\n  sideBarOpen: true,\n  composeMailOpen: false,\n  location: \"\",\n};\n\nconst reducer = produce((state: ControlState = initialState, action: Action) => {\n  switch (action.type) {\n\n    case ActionType.SET_LOCATION:\n      state.location = action.payload;\n      return\n\n    case ActionType.TOGGLE_SIDEBAR:\n      state.sideBarOpen = !state.sideBarOpen\n\n      return\n\n      case ActionType.OPEN_COMPOSE_MAIL:\n      state.composeMailOpen = true;\n\n      return\n\n      case ActionType.CLOSE_COMPOSE_MAIL:\n        state.composeMailOpen = false;\n\n      return\n    default:\n      return state;\n  }\n});\n\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport userReducer from './UserReducer';\nimport MailReducer from './MailReducer';\nimport ControlReducer from './ControlReducer';\n\nconst reducers = combineReducers({\n  user: userReducer,\n  mail: MailReducer,\n  control: ControlReducer\n  \n});\n\nexport default reducers;\n\nexport type RootState = ReturnType<typeof reducers>;\n","export * from './store';\nexport * from './reducers';\nexport * from './Mail';\nexport * as actionCreators from './action-creators';\n"],"sourceRoot":""}