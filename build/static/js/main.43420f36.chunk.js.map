{"version":3,"sources":["state/reducers/UserReducer.ts","state/reducers/MailReducer.ts","state/reducers/ControlReducer.ts","state/reducers/index.ts","state/index.ts","state/store.ts","helpers/messages.ts","state/action-creators/index.ts","wdyr.ts","components/styles.ts","hooks/use-typed-selector.ts","hooks/use-actions.ts","components/MyAppBar.tsx","components/MailListItem.tsx","components/MailList.tsx","components/SideMenu.tsx","components/MailPage.tsx","components/ComposeMail.tsx","components/Mail.tsx","components/SignUp.tsx","components/SignIn.tsx","components/App.tsx","index.tsx","state/action-types/index.ts","helpers/user.ts"],"names":["initialState","loading","fail","error","username","undefined","firstChar","reducer","produce","state","action","type","ActionType","LOGIN","LOGIN_SUCCESS","payload","LOGIN_FAIL","LOGIN_ERROR","GET_USER","GET_USER_COMPLETE","GET_USER_ERROR","LOGOUT","LOGOUT_COMPLETE","LOGOUT_ERROR","enableMapSet","sending","mail","checked","Set","FETCH_INBOX","FETCH_INBOX_COMPLETE","FETCH_INBOX_ERROR","FETCH_ALL_MAIL","FETCH_ALL_MAIL_COMPLETE","FETCH_ALL_MAIL_ERROR","TOGGLE_STAR","mailId","index","findIndex","_id","newToggle","isStarred","TOGGLE_STAR_ERROR","MARK_AS_READ","isRead","id","SEND_MAIL","SEND_MAIL_COMPLETE","push","SEND_MAIL_ERROR","MARK_AS_READ_ERROR","TOGGLE_IS_TRASH","isTrash","TOGGLE_IS_TRASH_ERROR","DELETE_MAIL","filletedMail","Array","includes","DELETE_MAIL_ERROR","TOGGLE_ALL_MALI_CHECKBOX","size","reset","mailList","map","TOGGLE_MALI_CHECKBOX","has","delete","add","sideBarOpen","composeMailOpen","location","SET_LOCATION","TOGGLE_SIDEBAR","OPEN_COMPOSE_MAIL","CLOSE_COMPOSE_MAIL","reducers","combineReducers","user","userReducer","MailReducer","control","ControlReducer","store","createStore","applyMiddleware","thunk","url","fetchAllMailFromServer","mailSize","Axios","method","data","withCredentials","toggleStarOnServer","toggleIsTrashOnServer","deleteMailOnServer","sendMailFromServer","msg","text","htmlToText","html","markAsReadOnServer","setLocation","toggleSideBar","openComposeMail","closeComposeMail","toggleMailCheckbox","toggleAllMailCheckbox","login","password","dispatch","a","loginSever","message","getUser","getUserFromServer","logout","logoutServer","fetchInbox","inbox","fetchAllMail","getState","length","allMail","needToUpdate","toggleStar","sendMail","res","console","log","markAsRead","toggleIsTrash","deleteMail","require","whyDidYouRender","React","trackAllPureComponents","drawerWidth","makeStyles","theme","drawerWithClose","spacing","root","display","appBar","width","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","paddingTop","paddingLeft","AppBarRight","AppbBarMiddle","flex","search","maxWidth","minWidth","input","iconButton","loc","backgroundColor","useTypedSelector","useSelector","useActions","useDispatch","useMemo","bindActionCreators","actionCreators","useStyles","MyAppBar","open","classes","useState","anchorEl","setAnchorEl","AppBar","position","className","clsx","Toolbar","Typography","variant","noWrap","Paper","component","IconButton","aria-label","InputBase","placeholder","inputProps","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","Tooltip","title","Avatar","Menu","keepMounted","Boolean","onClose","style","margin","MenuItem","fullWidth","color","MailListItem","hover","setHover","handleClickTrash","handleClickIsRead","MarkAsReadOrUnreadIcon","Checkbox","fontSize","to","textDecoration","onMouseEnter","onMouseLeave","isOutbound","from","subject","moment","created","format","palette","background","paper","MailList","match","params","filter","reverse","checkAll","useEffect","SideMenu","useTheme","Drawer","Divider","toLocaleLowerCase","replaceAll","ListItem","button","ListItemIcon","ListItemText","primary","MailPage","history","useHistory","find","mailID","goBack","parse","ComposeMail","useForm","register","handleSubmit","watch","errors","useRef","onSubmit","current","name","ref","required","config","attribution","height","quickInsertTags","listAdvancedTypes","onModelChange","List","makeStyles2","composeMail","path","exact","Plist","memo","Mail","props","CssBaseline","Copyright","align","Date","getFullYear","marginTop","flexDirection","avatar","secondary","main","form","submit","SignUp","singUpUsername","setSingUpUsername","singUpPassword","setSingUpnPassword","singUpPasswordConfirm","setSingUpPasswordConfirm","singUpUsernameError","setSingUpUsernameError","singUpPasswordError","setSingUpnPasswordError","singUpPasswordConfirmError","setSingUpPasswordConfirmError","signUpOnServer","e","preventDefault","registerServer","param","Container","noValidate","Grid","container","item","xs","TextField","label","autoComplete","onChange","target","value","helperText","justify","Box","mt","alert","marginBottom","minHeight","borderWidth","borderStyle","borderRadius","lineHeight","borderColor","alertText","alignSelf","mozBoxFlex","SignIn","loginUsername","setLoginUsername","loginPassword","setLoginPassword","role","data-testid","window","addEventListener","autoFocus","FormControlLabel","App","T","ReactDOM","render","document","querySelector","passwordConfirm"],"mappings":"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","file":"static/js/main.43420f36.chunk.js","sourcesContent":["import produce from 'immer';\nimport { ActionType } from '../action-types';\nimport { Action } from '../actions';\n\ninterface UserState {\n  loading: boolean;\n  fail: boolean;\n  error: string | null;\n  username: string | undefined;\n  firstChar: string;\n}\n\nconst initialState: UserState = {\n  loading: true,\n  fail: false,\n  error: null,\n  username: undefined,\n  firstChar: \"\",\n};\n\nconst reducer = produce((state: UserState = initialState, action: Action) => {\n  switch (action.type) {\n    case ActionType.LOGIN:\n      state.loading = true;\n      return\n\n    case ActionType.LOGIN_SUCCESS:\n      state.loading = false;\n      state.fail = false;\n      state.username = action.payload.username;\n      state.firstChar = action.payload.firstChar;\n      return\n\n    case ActionType.LOGIN_FAIL:\n      state.loading = false;\n      state.fail = true;\n\n      return;\n\n    case ActionType.LOGIN_ERROR:\n      state.loading = false;\n      state.error = action.payload;\n      return\n\n\n      //may be useless\n    case ActionType.GET_USER:\n      state.loading = true;\n      return\n  \n    case ActionType.GET_USER_COMPLETE:\n      state.loading = false;\n      state.fail = false;\n      state.username = action.payload.username;\n      state.firstChar = action.payload.firstChar;\n      return\n  \n    case ActionType.GET_USER_ERROR:\n      state.loading = false;\n      state.error = action.payload;\n      return  \n      \n    case ActionType.LOGOUT:\n      state.loading = true;\n      return\n    \n    case ActionType.LOGOUT_COMPLETE:\n      state.loading = false;\n      state.username = \"\";\n      state.firstChar = \"\";\n      return\n    \n    case ActionType.LOGOUT_ERROR:\n      state.loading = false;\n      state.error = action.payload;\n      return  \n  \n    default:\n      return state;\n  }\n});\n\n\nexport default reducer;\n","import produce , { enableMapSet } from 'immer';\nimport { ActionType } from '../action-types';\nimport { Action } from '../actions';\nimport { Mail } from '../Mail';\n\n\nenableMapSet();\n\ninterface MailState {\n  loading: boolean;\n  sending: boolean\n  error: string | null;\n  mail: Mail[];\n  checked: Set<string>;\n}\n\nconst initialState: MailState = {\n  loading: false,\n  sending: false,\n  error: null,\n  mail: [],\n  checked: new Set(),\n};\n\nconst reducer = produce((state: MailState = initialState, action: Action) => {\n  \n\n  switch (action.type) {\n      \n    case ActionType.FETCH_INBOX:\n      state.loading = true;\n      return\n\n    case ActionType.FETCH_INBOX_COMPLETE:\n      state.loading = false;\n     // state.inbox = action.payload;\n      return\n\n    case ActionType.FETCH_INBOX_ERROR:\n      state.loading = false;\n      state.error = action.payload;\n      return\n\n    case ActionType.FETCH_ALL_MAIL:\n        state.loading = true;\n        return\n  \n    case ActionType.FETCH_ALL_MAIL_COMPLETE:\n      state.loading = false;\n      state.mail = action.payload;\n      return\n  \n      case ActionType.FETCH_ALL_MAIL_ERROR:\n        state.loading = false;\n        state.error = action.payload;\n        return  \n\n    case ActionType.TOGGLE_STAR: {\n      const mailId = action.payload;\n      const index = state.mail.findIndex(mail => mail._id === mailId)\n      const newToggle = !state.mail[index].isStarred\n      state.mail[index] = {...state.mail[index] , isStarred: newToggle }\n      return\n    }\n    case ActionType.TOGGLE_STAR_ERROR: \n      state.error = action.payload;\n    \n      return\n\n    case ActionType.MARK_AS_READ: {\n      const {mailId , isRead} = action.payload;\n      for(const id of mailId) {\n      const index = state.mail.findIndex(mail => mail._id === id)\n      state.mail[index] = {...state.mail[index] , isRead: isRead }\n      }\n      return\n    }\n\n    case ActionType.SEND_MAIL:\n      state.sending = true;\n      return\n    \n    case ActionType.SEND_MAIL_COMPLETE:\n      state.sending = false;\n      state.mail.push(action.payload);\n      return\n    \n    case ActionType.SEND_MAIL_ERROR:\n      state.sending = false;\n      state.error = action.payload;\n      return\n\n    case ActionType.MARK_AS_READ_ERROR:\n      state.error = action.payload;\n      return\n\n    case ActionType.TOGGLE_IS_TRASH: {\n      const mailId = action.payload;\n      for(const id of mailId) {\n      const index = state.mail.findIndex(mail => mail._id === id)\n      const newToggle = !state.mail[index].isTrash;\n      state.mail[index] = {...state.mail[index] , isTrash: newToggle }\n      }\n      return\n    }\n    \n    case ActionType.TOGGLE_IS_TRASH_ERROR: \n      state.error = action.payload;\n      return\n\n    case ActionType.DELETE_MAIL: {\n      const mailId = action.payload;\n      const filletedMail = new Array();\n      for(const mail of state.mail) {\n      if(!mailId.includes(mail._id))\n      filletedMail.push(mail);\n      }\n      state.mail = filletedMail;\n      return \n  \n    }\n      \n    case ActionType.DELETE_MAIL_ERROR: \n      state.error = action.payload;\n      return\n    \n    case ActionType.TOGGLE_ALL_MALI_CHECKBOX:\n      if(state.checked.size || action.payload.reset){\n        state.checked = new Set();\n      } else {\n        state.checked = new Set(action.payload.mailList.map(mail => mail._id));\n      }\n      return\n\n    case ActionType.TOGGLE_MALI_CHECKBOX:\n        if(state.checked.has(action.payload)){\n          state.checked.delete(action.payload);\n        } else {\n          state.checked.add(action.payload);\n        }\n        return\n\n    default:\n      return state;\n  }\n});\n\n\nexport default reducer;\n","import produce from 'immer';\nimport { ActionType } from '../action-types';\nimport { Action } from '../actions';\n\ninterface ControlState {\n  sideBarOpen: boolean;\n  composeMailOpen: boolean;\n  location: string;\n\n}\n\nconst initialState: ControlState = {\n  sideBarOpen: true,\n  composeMailOpen: false,\n  location: \"\",\n};\n\nconst reducer = produce((state: ControlState = initialState, action: Action) => {\n  switch (action.type) {\n\n    case ActionType.SET_LOCATION:\n      state.location = action.payload;\n      return\n\n    case ActionType.TOGGLE_SIDEBAR:\n      state.sideBarOpen = !state.sideBarOpen\n\n      return\n\n      case ActionType.OPEN_COMPOSE_MAIL:\n      state.composeMailOpen = true;\n\n      return\n\n      case ActionType.CLOSE_COMPOSE_MAIL:\n        state.composeMailOpen = false;\n\n      return\n    default:\n      return state;\n  }\n});\n\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport userReducer from './UserReducer';\nimport MailReducer from './MailReducer';\nimport ControlReducer from './ControlReducer';\n\nconst reducers = combineReducers({\n  user: userReducer,\n  mail: MailReducer,\n  control: ControlReducer\n  \n});\n\nexport default reducers;\n\nexport type RootState = ReturnType<typeof reducers>;\n","export * from './store';\nexport * from './reducers';\nexport * from './cell';\nexport * as actionCreators from './action-creators';\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\n\nexport const store = createStore(\n  reducers,\n  {},\n  applyMiddleware( thunk)\n);\n","import Axios, { AxiosPromise } from 'axios';\r\nimport { Mail } from '../state/Mail';\r\nimport {htmlToText} from 'html-to-text';\r\n\r\n\r\nconst localUrl = \"http://localhost:7777\"\r\nconst serverUrl = \"https://rabany-mail-backend.herokuapp.com\"\r\n\r\nconst url = serverUrl;\r\n\r\nexport const fetchInboxFromServer : () => AxiosPromise<Mail[]> = () => {\r\n return Axios({\r\n    method: \"GET\",\r\n    withCredentials: true,\r\n    url: url + \"/messages/inbox\",\r\n})\r\n}\r\n\r\nexport const fetchAllMailFromServer : (mailSize : number) => AxiosPromise<{allMail : Mail[] , needToUpdate : boolean} > = (mailSize : number) => {\r\n    return Axios({\r\n       method: \"POST\",\r\n       data: {mailSize} ,\r\n       withCredentials: true,\r\n       url: url + \"/messages/allmail\",\r\n   })\r\n   }\r\n\r\nexport const toggleStarOnServer  = (mailId: string) => {\r\n    return Axios({\r\n       method: \"POST\",\r\n       data: { mailId : mailId},\r\n       withCredentials: true,\r\n       url: url + \"/messages/starred\",\r\n   })\r\n}\r\n\r\nexport const toggleIsTrashOnServer  = (mailId: string[]) => {\r\n    return Axios({\r\n       method: \"POST\",\r\n       data: { mailId : mailId},\r\n       withCredentials: true,\r\n       url: url + \"/messages/istrash\",\r\n   })\r\n}\r\n\r\nexport const deleteMailOnServer  = (mailId: string[]) => {\r\n    return Axios({\r\n       method: \"POST\",\r\n       data: { mailId : mailId},\r\n       withCredentials: true,\r\n       url: url + \"/messages/deleteMessages\",\r\n   })\r\n}\r\n\r\nexport const sendMailFromServer = (msg: {\r\n    to: string[],\r\n    subject: string,\r\n    html: string\r\n    text: string | undefined\r\n  }) => {\r\n    \r\n   \r\n    \r\n    msg.text = htmlToText(msg.html) \r\n    return Axios({\r\n        method: \"POST\",\r\n        data: msg,\r\n        withCredentials: true,\r\n        url: url + \"/messages\",\r\n    });\r\n}\r\n\r\nexport const markAsReadOnServer  = (mailId: string[] , isRead : boolean) => {\r\n    \r\n    return Axios({\r\n       method: \"POST\",\r\n       data: { mailId , isRead},\r\n       withCredentials: true,\r\n       url: url + \"/messages/markasread\",\r\n   })\r\n}","import { Dispatch } from 'redux';\nimport { fetchInboxFromServer, markAsReadOnServer, toggleStarOnServer , sendMailFromServer , fetchAllMailFromServer, toggleIsTrashOnServer, deleteMailOnServer} from '../../helpers/messages';\nimport { loginSever, logoutServer , getUserFromServer } from '../../helpers/user';\nimport { ActionType } from '../action-types';\nimport {\n  Action,\n   closeComposeMailAction,\n   openComposeMailAction, \n   setLocationAction,\n  toggleMailCheckboxAction,\n   toggleSidebarAction,\n   toggleAllMailCheckboxAction,\n} from '../actions';\nimport { Mail } from '../Mail';\n\nimport { RootState } from '../reducers';\n\nexport const setLocation = (location: string): setLocationAction => {\n  return {\n    type: ActionType.SET_LOCATION,\n    payload: location\n  };\n};\n\nexport const toggleSideBar = (): toggleSidebarAction => {\n  return {\n    type: ActionType.TOGGLE_SIDEBAR,\n  };\n};\n\nexport const openComposeMail = (): openComposeMailAction => {\n  return {\n    type: ActionType.OPEN_COMPOSE_MAIL,\n  };\n};\n\nexport const closeComposeMail = (): closeComposeMailAction => {\n  return {\n    type: ActionType.CLOSE_COMPOSE_MAIL,\n  };\n};\n\nexport const toggleMailCheckbox = (mailId: string): toggleMailCheckboxAction => {\n  return {\n    type: ActionType.TOGGLE_MALI_CHECKBOX,\n    payload: mailId\n  };\n};\n\nexport const toggleAllMailCheckbox = (mailList: Mail[],reset? : boolean): toggleAllMailCheckboxAction => {\n  return {\n    type: ActionType.TOGGLE_ALL_MALI_CHECKBOX,\n    payload: { mailList ,reset } \n  };\n};\n\nexport const login = (username: string , password: string) => {\n  return async (dispatch: Dispatch<Action>) => {\n\n    dispatch({type: ActionType.LOGIN,});\n    \n  \n    try {\n      const {data} : {data: {username: string , firstChar: string} | false} = await loginSever(username, password);\n     \n      if(data) {\n        dispatch({\n          type: ActionType.LOGIN_SUCCESS,\n          payload: {username: data.username , firstChar: data.firstChar}\n        });\n      } else {\n        dispatch({\n          type: ActionType.LOGIN_FAIL,\n        });\n      }\n    \n    } catch (err) {\n      \n      dispatch({\n        type: ActionType.LOGIN_ERROR,\n        payload: err.message\n      });\n    }\n  };\n};\n\nexport const getUser = () =>\n{\n  return async (dispatch: Dispatch<Action>) => {\n\n    dispatch({type: ActionType.GET_USER});\n    \n    try {\n      const {data} : {data: {username: string , firstChar: string}}  = await getUserFromServer();\n\n     \n      dispatch({\n        type: ActionType.GET_USER_COMPLETE,\n        payload: {username: data.username , firstChar: data.firstChar}\n      });\n     \n    \n    } catch (err) {\n     \n      dispatch({\n        type: ActionType.GET_USER_ERROR,\n        payload: err.message\n      });\n    }\n  };\n}\n\nexport const logout = () =>\n{\n  return async (dispatch: Dispatch<Action>) => {\n\n    dispatch({type: ActionType.LOGOUT});\n    \n    try {\n      await logoutServer();\n\n      dispatch({\n        type: ActionType.LOGOUT_COMPLETE\n      });\n     \n    \n    } catch (err) {\n      \n      dispatch({\n        type: ActionType.LOGOUT_ERROR,\n        payload: err.message\n      });\n    }\n  };\n}\n\nexport const fetchInbox = () =>\n{\n  return async (dispatch: Dispatch<Action>) => {\n\n    dispatch({type: ActionType.FETCH_INBOX});\n    \n    try {\n      const inbox  = (await fetchInboxFromServer()).data;\n      \n      dispatch({\n        type: ActionType.FETCH_INBOX_COMPLETE,\n        payload: inbox\n      });\n     \n    \n    } catch (err) {\n      dispatch({\n        type: ActionType.FETCH_INBOX_ERROR,\n        payload: err.message\n      });\n    }\n  };\n}\n\nexport const fetchAllMail = () =>\n{\n  return async (dispatch: Dispatch<Action> , getState: () => RootState) => {\n\n    dispatch({type: ActionType.FETCH_ALL_MAIL});\n    const mailSize = getState().mail?.mail.length || 0;\n  \n    try {\n      const {allMail , needToUpdate}  = (await fetchAllMailFromServer(mailSize)).data;\n     \n      \n      if(needToUpdate)\n      dispatch({\n        type: ActionType.FETCH_ALL_MAIL_COMPLETE,\n        payload: allMail\n      });\n     \n    \n    } catch (err) {\n      dispatch({\n        type: ActionType.FETCH_ALL_MAIL_ERROR,\n        payload: err.message\n      });\n    }\n  };\n}\n\nexport const toggleStar = (mailId : string) =>\n{\n  return async (dispatch: Dispatch<Action>) => {\n    dispatch({type: ActionType.TOGGLE_STAR , payload: mailId});\n    try {\n      const res = await toggleStarOnServer(mailId);\n      \n      \n    \n    } catch (err) {\n      \n      dispatch({\n        type: ActionType.TOGGLE_STAR_ERROR,\n        payload: err.message\n      });\n    }\n  };\n}\n\nexport const sendMail = (msg: {\n  to: string[],\n  subject: string,\n  html: string\n  text: string | undefined\n}) =>\n{\n  return async (dispatch: Dispatch<Action>) => {\n\n    dispatch({type: ActionType.SEND_MAIL });\n    \n    try {\n      const res = (await sendMailFromServer(msg)).data as Mail;\n      console.log(res);\n      dispatch({type: ActionType.SEND_MAIL_COMPLETE , payload: res });\n    \n    } catch (err) {\n      console.log(\"star error: \" + err.message)\n      dispatch({\n        type: ActionType.SEND_MAIL_ERROR,\n        payload: err.message\n      });\n    }\n  };\n}\n\nexport const markAsRead = (mailId : string[] , isRead : boolean) =>\n{\n\n  return async (dispatch: Dispatch<Action>) => {\n    \n    try {\n     \n      await markAsReadOnServer(mailId , isRead);\n\n      dispatch({type: ActionType.MARK_AS_READ , payload:{ mailId , isRead }});\n    \n    } catch (err) {\n      \n      dispatch({\n        type: ActionType.MARK_AS_READ_ERROR,\n        payload: err.message\n      });\n    }\n  };\n}\n\nexport const toggleIsTrash = (mailId : string[]) =>\n{\n  return async (dispatch: Dispatch<Action>) => {\n    \n    dispatch({type: ActionType.TOGGLE_IS_TRASH , payload: mailId});\n    try {\n      const res = await toggleIsTrashOnServer(mailId);\n      \n      \n    \n    } catch (err) {\n      \n      dispatch({\n        type: ActionType.TOGGLE_IS_TRASH_ERROR,\n        payload: err.message\n      });\n    }\n  };\n}\n\nexport const deleteMail = (mailId : string[]) =>\n{\n  return async (dispatch: Dispatch<Action>) => {\n    \n   \n    try {\n       await deleteMailOnServer(mailId);\n       dispatch({type: ActionType.DELETE_MAIL , payload: mailId});\n      \n    \n    } catch (err) {\n      \n      dispatch({\n        type: ActionType.DELETE_MAIL_ERROR,\n        payload: err.message\n      });\n    }\n  };\n}\n\n","/** @jsxImportSource @welldone-software/why-did-you-render */\r\n/// <reference types=\"@welldone-software/why-did-you-render\" />\r\nimport React from 'react';\r\n\r\nconst whyDidYouRender = require('@welldone-software/why-did-you-render');\r\nwhyDidYouRender(React, {\r\n  trackAllPureComponents: true,\r\n});","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst drawerWidth = 200;\r\n\r\nexport default () => makeStyles((theme) => {\r\n  const drawerWithClose = theme.spacing(7) + 1;\r\n\r\n  return {\r\n    root: {\r\n      display: \"flex\"\r\n    },\r\n    appBar: {\r\n      display: \"flex\",\r\n      width: `calc(100% - ${drawerWithClose}px)`,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen\r\n      })\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen\r\n      })\r\n    },\r\n    menuButton: {\r\n      marginRight: 36\r\n    },\r\n    hide: {\r\n      display: \"none\"\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: \"nowrap\"\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen\r\n      })\r\n    },\r\n\r\n    drawerClose: {\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen\r\n      }),\r\n      overflowX: \"hidden\",\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: drawerWithClose\r\n      }\r\n    },\r\n    toolbar: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      paddingTop: theme.spacing(3),\r\n      paddingLeft: theme.spacing(1)\r\n    },\r\n    AppBarRight: {\r\n      marginLeft: 10\r\n    },\r\n    AppbBarMiddle: {\r\n      flex: 1,  \r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      \r\n    },\r\n  search:{\r\n    display: \"flex\",\r\n    flex: 1,\r\n    marginLeft: 20,\r\n    maxWidth: 600,\r\n    minWidth: 200\r\n  },\r\n   input: {\r\n    marginLeft: theme.spacing(1),\r\n    //maxWidth: 200,\r\n    width: \"100%\"\r\n  },\r\n  iconButton: {\r\n    padding: 10\r\n  },\r\n  loc:{\r\n    backgroundColor: \"rgba(0, 0, 0, 0.1) !important\"\r\n  }\r\n  };\r\n});","import { useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { RootState } from '../state';\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../state';\n\nexport const useActions = () => {\n  const dispatch = useDispatch();\n\n  return useMemo(() => {\n    return bindActionCreators(actionCreators, dispatch);\n  }, [dispatch]);\n};\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from \"clsx\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport makeStyles from './styles';\r\nimport { Button, IconButton, InputBase, Menu, MenuItem, Paper, Tooltip } from '@material-ui/core';\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useTypedSelector } from '../hooks/use-typed-selector';\r\nimport { useActions } from '../hooks/use-actions';\r\n\r\n\r\n\r\nconst useStyles = makeStyles();\r\n\r\n\r\nexport default function MyAppBar() {\r\n\r\n  const {logout} = useActions();\r\n\r\n  const username  = useTypedSelector((state) => {\r\n    return state.user?.username;\r\n  });\r\n\r\n  const  firstChar = useTypedSelector((state) => {\r\n    return state.user?.firstChar;     \r\n  });\r\n\r\n  const open = useTypedSelector((state) => {\r\n    return state.control?.sideBarOpen;\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event: any) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setAnchorEl(null);\r\n    logout();\r\n  };\r\n\r\n  return (\r\n    <div >\r\n       <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open\r\n        })}\r\n      >\r\n        <Toolbar>\r\n        <Typography variant=\"h6\" noWrap>\r\n            Rabany Mail\r\n          </Typography>\r\n          \r\n\r\n        <div className={classes.AppbBarMiddle}>\r\n        <Paper component=\"form\" className={classes.search}>\r\n         <IconButton\r\n        type=\"submit\"\r\n        className={classes.iconButton}\r\n        aria-label=\"search\"\r\n        >\r\n        <SearchIcon />\r\n          </IconButton>\r\n          <InputBase\r\n        className={classes.input}\r\n        placeholder=\"Search Mail\"\r\n        inputProps={{ \"aria-label\": \"Search Mail\" }}\r\n            />\r\n           </Paper>\r\n           </div>\r\n          \r\n          <div className = {classes.AppBarRight}>\r\n          <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}> \r\n        <Tooltip title={`${username}@rabanymail.com`} aria-label=\"add\">  \r\n        <Avatar> {firstChar}  </Avatar>\r\n       </Tooltip>\r\n       </Button>\r\n       <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <Typography style={{margin: 10}} variant =\"h5\" > {`${username}@rabanymail.com`} </Typography>\r\n        <MenuItem onClick={handleLogout}>\r\n          \r\n        <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n          Logout\r\n          </Button>\r\n          </MenuItem>\r\n      </Menu>\r\n\r\n        </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import  {  useState } from 'react';\r\nimport { Checkbox, IconButton } from '@material-ui/core';\r\nimport StarBorderRoundedIcon from '@material-ui/icons/StarBorderRounded';\r\nimport StarRoundedIcon from '@material-ui/icons/StarRounded';\r\nimport './MailListItem.css';\r\nimport moment from 'moment';\r\nimport { Link  } from 'react-router-dom';\r\nimport { useActions } from \"../hooks/use-actions\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport RestoreFromTrashIcon from '@material-ui/icons/RestoreFromTrash';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport clsx from \"clsx\";\r\nimport { useTypedSelector } from '../hooks/use-typed-selector';\r\n\r\n\r\n\r\nconst MailListItem = ({mail ,  location }: any) => {\r\n\r\n   \r\nconst {toggleStar ,markAsRead , toggleIsTrash , deleteMail} = useActions();\r\nconst [hover, setHover] = useState(false);\r\n\r\n const { toggleMailCheckbox} = useActions();\r\n\r\n\r\n  const checked = useTypedSelector((state) => {\r\n   return state.mail?.checked.has(mail._id);\r\n  }) || false;\r\n\r\n  const handleCheck =  () => {\r\n    toggleMailCheckbox(mail._id);\r\n  };\r\n\r\n    const handleClickStar = () => {\r\n        toggleStar(mail._id);\r\n        \r\n    }\r\n\r\n    const handleClickTrash = () => {\r\n        toggleIsTrash([mail._id]);\r\n        \r\n    }\r\n\r\n    const handleClickDelete = () => {\r\n        deleteMail([mail._id]);\r\n        \r\n    }\r\n\r\n    const handleClickIsRead = () => {\r\n        markAsRead([mail._id] , !mail.isRead);\r\n        \r\n    }\r\n\r\n    const handleClickIsMail = () => {\r\n        if(!mail.isRead)\r\n        markAsRead([mail._id] , true);\r\n        \r\n    }\r\n\r\n    const MarkAsReadOrUnreadIcon = () => (\r\n        !mail.isRead \r\n        ?\r\n        <Tooltip title=\"Mark as read\" aria-label=\"Mark as read\">\r\n            <IconButton onClick = {handleClickIsRead}>\r\n                <DraftsIcon  />\r\n            </IconButton>\r\n        </Tooltip>  \r\n        :\r\n        <Tooltip title=\"Mark as unread\" aria-label=\"Mark as unread\">\r\n            <IconButton onClick = {handleClickIsRead}>\r\n                <EmailIcon  />\r\n            </IconButton>\r\n        </Tooltip> \r\n        \r\n        )\r\n\r\n\r\n  return (\r\n    <div className={clsx(\"emailRow\", {\r\n        \"readMark\": mail.isRead,\r\n      })}>\r\n        <div className=\"emailRow_options\">\r\n            <Checkbox checked = {checked} onClick={handleCheck}/>\r\n            <IconButton onClick = {handleClickStar}>\r\n            { mail.isStarred \r\n                ? <StarRoundedIcon fontSize = \"large\"/>\r\n                : <StarBorderRoundedIcon fontSize = \"large\"/>}\r\n            </IconButton>\r\n\r\n        </div>\r\n        \r\n        \r\n       <Link onClick={handleClickIsMail} className=\"clickable\" to={`/mail/${location}/${mail._id}`} style={{ textDecoration: 'none' , color: \"inherit\" }}\r\n           onMouseEnter = {() => {setHover(true)}}\r\n           onMouseLeave={() => {setHover(false)}}>\r\n\r\n        \r\n        <div className=\"emailRow_title\" >\r\n        <h3>\r\n            {mail.isOutbound ? `To:${mail.to[0]}` : mail.from }\r\n        </h3>\r\n        </div>\r\n        <div className=\"emailRow_message\">\r\n            <h4>\r\n                {mail.subject}\r\n                <span className=\"emailRow_description\"> - {\" \"}\r\n                    {mail.text}\r\n                </span>\r\n            </h4>\r\n        </div>\r\n\r\n        </Link>\r\n            <div onMouseEnter = {() => {setHover(true)}} onMouseLeave={() => {setHover(false)}}>\r\n                <div className=\"emailRow_time\">\r\n        \r\n            {!hover \r\n                ?\r\n                    <h4>  {moment(mail.created).format(\"MMM Do\") }</h4>\r\n                :\r\n                <>\r\n                    {!mail.isTrash \r\n                    ? \r\n                    <>\r\n                        <Tooltip title=\"move to trash\" aria-label=\"move to trash\">\r\n                            <IconButton onClick = {handleClickTrash}>\r\n                                <DeleteIcon fontSize = \"large\"/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <Tooltip title=\"Delete\" aria-label=\"Delete\">\r\n                            <IconButton onClick = {handleClickDelete}>\r\n                                <DeleteForeverIcon fontSize = \"large\"/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n\r\n                        <Tooltip title=\"Restore\" aria-label=\"Restore\">\r\n                            <IconButton onClick = {handleClickTrash}>\r\n                                <RestoreFromTrashIcon fontSize = \"large\"/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </>\r\n                \r\n                     }\r\n\r\n                    <MarkAsReadOrUnreadIcon/>   \r\n                </>\r\n        }\r\n\r\n            </div>\r\n        </div>\r\n       \r\n       \r\n    </div>\r\n)\r\n}\r\n\r\nexport default MailListItem;","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Checkbox, IconButton, Tooltip } from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport RestoreFromTrashIcon from '@material-ui/icons/RestoreFromTrash';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport KeyboardIcon from '@material-ui/icons/Keyboard';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport './MailList.css';\r\nimport MailListItem from './MailListItem';\r\n\r\n\r\nimport Axios from 'axios';\r\nimport { useActions } from \"../hooks/use-actions\";\r\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\r\nimport { ContactlessOutlined } from \"@material-ui/icons\";\r\nimport {Mail} from \"../state/Mail\";\r\nimport { stat } from \"node:fs\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\n\r\n\r\nexport default function MailList( {match }: any) {\r\n  const classes = useStyles();\r\n\r\n  const location = match.params.location;\r\n\r\n  const {setLocation ,fetchAllMail , toggleAllMailCheckbox , toggleIsTrash , deleteMail , markAsRead} = useActions();\r\n\r\n  const mailList = useTypedSelector((state) => {\r\n    if(state.control?.location === \"inbox\") return state.mail?.mail.filter(mail => !mail.isOutbound && !mail.isTrash).reverse();\r\n    if(state.control?.location === \"starred\") return state.mail?.mail.filter(mail => mail.isStarred && !mail.isTrash).reverse();\r\n    if(state.control?.location === \"sent\") return state.mail?.mail.filter(mail => mail.isOutbound && !mail.isTrash).reverse();\r\n    if(state.control?.location === \"allmail\") return state.mail?.mail.filter(mail => !mail.isTrash).reverse();\r\n    if(state.control?.location === \"trash\") return state.mail?.mail.filter(mail => mail.isTrash).reverse();    \r\n    return [];\r\n  }) as Mail[];\r\n\r\n\r\n  const checkAll = useTypedSelector((state) => {\r\n    return state.mail?.checked;\r\n   }) || new Set();\r\n\r\n  useEffect(() => {\r\n    setLocation(location);  \r\n},[] );\r\n\r\nuseEffect(() => {\r\n  toggleAllMailCheckbox(mailList ,true);\r\n  if(location === \"inbox\")\r\n  fetchAllMail();\r\n},[location] );\r\n\r\n  const refresh = () => {\r\n    fetchAllMail();\r\n  }\r\n\r\n\r\n  const handleCheckAll =  () => {\r\n    toggleAllMailCheckbox(mailList);\r\n  };\r\n\r\n\r\nconst handleClickTrash = () => {\r\n  toggleAllMailCheckbox(mailList,true);\r\n  toggleIsTrash(Array.from(checkAll));\r\n  \r\n}\r\n\r\nconst handleClickDelete = () => {\r\n  toggleAllMailCheckbox(mailList,true);\r\n  deleteMail(Array.from(checkAll));\r\n  \r\n}\r\n\r\nconst handleClickRead = () => {\r\n  markAsRead(Array.from(checkAll) , true);\r\n}\r\n\r\nconst handleClickUnRead = () => {\r\n  markAsRead(Array.from(checkAll) , false);\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"emailList\">\r\n        <div className=\"emailList_settings\">\r\n            <div className=\"emailList_settingsLeft\">\r\n                <Checkbox  checked={checkAll.size !== 0} onClick = {handleCheckAll}/>\r\n                {!checkAll.size \r\n                ?\r\n                <Tooltip title=\"Refresh\" aria-label=\"Refresh\"> \r\n                    <IconButton onClick = {refresh}>\r\n                      <RefreshIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                :\r\n                 <>\r\n                 {(location !== \"trash\")\r\n                  ?\r\n                  <Tooltip title=\"move to trash\" aria-label=\"move to trash\">\r\n                    <IconButton onClick = {handleClickTrash}>\r\n                      <DeleteIcon />\r\n                   </IconButton>\r\n                  </Tooltip>\r\n                  :\r\n                  <>\r\n                   <Tooltip title=\"Restore\" aria-label=\"Restore\">\r\n                    <IconButton onClick = {handleClickTrash}>\r\n                      <RestoreFromTrashIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n\r\n                  <Tooltip title=\"Delete\" aria-label=\"Delete\">\r\n                    <IconButton onClick = {handleClickDelete}>\r\n                      <DeleteForeverIcon />\r\n                   </IconButton>\r\n                  </Tooltip>\r\n                  </>\r\n                }\r\n                <Tooltip title=\"Mark as read\" aria-label=\"Mark as read\">\r\n                  <IconButton onClick = {handleClickRead}>\r\n                    <DraftsIcon  />\r\n                  </IconButton>\r\n                </Tooltip>  \r\n        \r\n                <Tooltip title=\"Mark as unread\" aria-label=\"Mark as unread\">\r\n                  <IconButton onClick = {handleClickUnRead}>\r\n                      <EmailIcon />\r\n                   </IconButton>\r\n                </Tooltip> \r\n                </>\r\n              }\r\n             \r\n            </div>\r\n         \r\n        </div>\r\n\r\n        <div className=\"emailList_list\">\r\n            {mailList.map( (mail:any) => (\r\n                \r\n                <MailListItem key={mail._id} mail={mail} location={location}/>\r\n\r\n            ))}\r\n        </div>\r\n    </div>\r\n);\r\n}\r\n","import clsx from \"clsx\";\r\nimport { makeStyles as makeStyles2, useTheme } from \"@material-ui/core/styles\";\r\nimport { Link } from 'react-router-dom';\r\nimport makeStyles from './styles';\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\r\nimport { useActions } from \"../hooks/use-actions\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport StarRoundedIcon from '@material-ui/icons/StarRounded';\r\nimport PresentToAllIcon from '@material-ui/icons/PresentToAll';\r\n\r\n\r\n\r\nconst useStyles = makeStyles();\r\n\r\nconst SideMenu = () => {\r\n  \r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const {openComposeMail ,toggleSideBar ,setLocation} = useActions();\r\n  \r\n  const open = useTypedSelector(state => state.control?.sideBarOpen); \r\n\r\n  const location = useTypedSelector(state => state.control?.location); \r\n\r\n\r\n  return (\r\n    <div>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open\r\n          })\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={toggleSideBar} >\r\n            {open ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {[\r\n            [\"Inbox\", <InboxIcon />],\r\n            [\"Starred\", <StarRoundedIcon/>] ,\r\n            [\"Sent\" , <PresentToAllIcon/>],\r\n            [\"All mail\" , <MailIcon /> ],\r\n            [\"trash\",<DeleteIcon/>],\r\n          ].map((text : any, index) => (\r\n            <Link to={'/mail/' + text[0].toLocaleLowerCase().replaceAll( ' ', '')} style={{ textDecoration: 'none' , color: \"inherit\" }} key={text}>\r\n            <ListItem \r\n            button key={text} \r\n            className={clsx({[classes.loc]: text[0].toLocaleLowerCase().replaceAll( ' ', '') === location})}\r\n            onClick= {() => { setLocation(text[0].toLocaleLowerCase().replaceAll( ' ', ''))}}\r\n            >\r\n              <ListItemIcon>\r\n                {text[1]}\r\n              </ListItemIcon>\r\n              <ListItemText primary={text[0]} />\r\n            </ListItem>\r\n            </Link>\r\n          ))}\r\n            <Divider />\r\n            <ListItem ></ListItem> \r\n            <ListItem button key={\"compose\"} onClick={openComposeMail}>\r\n              <ListItemIcon>\r\n               <InboxIcon /> \r\n              </ListItemIcon>\r\n              <ListItemText primary={\"compose\"} />\r\n            </ListItem>\r\n        </List>\r\n\r\n       \r\n        \r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideMenu;\r\n","import React, { useEffect } from 'react';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EmailIcon from '@material-ui/icons/Email';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport RestoreFromTrashIcon from '@material-ui/icons/RestoreFromTrash';\n\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport './MailPage.css';\nimport moment from 'moment';\nimport { useTypedSelector } from '../hooks/use-typed-selector';\nimport { useActions } from '../hooks/use-actions';\n\nimport parse from 'html-react-parser';\n\n\n\nconst MailPage =( { match} : any) => {\n    \n    const { toggleIsTrash , deleteMail , markAsRead} = useActions();\n    const history = useHistory();\n\n   // const [mail, setMail] = React.useState<any>({});\n\n    const mail = useTypedSelector((state) => {\n        return state.mail?.mail.find( mail => mail._id === match.params.mailID);\n      });\n\n      const goBack = () => history.goBack()\n\n      const handleClickTrash = () => {\n        if(mail)\n        toggleIsTrash([mail._id]);\n        \n      }\n      \n      const handleClickDelete = () => {\n        if(mail)\n        deleteMail([mail._id]);\n        history.goBack();\n        \n      }\n      \n     \n      const handleClickUnRead = () => {\n        if(mail)\n        markAsRead([mail._id] , false);\n        history.goBack();\n\n      }\n\n\n    if(!mail) return <div></div>;\n    return (\n        <div className=\"mail\">\n            <div className=\"mail_tools\">\n                <div className=\"mail_toolsLeft\">\n                    <IconButton onClick = {goBack}>\n                        <ArrowBackIcon  />\n                    </IconButton>\n                    \n                {!mail.isTrash\n                  ?\n                  <Tooltip title=\"move to trash\" aria-label=\"move to trash\">\n                    <IconButton onClick = {handleClickTrash}>\n                      <DeleteIcon />\n                   </IconButton>\n                  </Tooltip>\n                  :\n                  <>\n                   <Tooltip title=\"Restore\" aria-label=\"Restore\">\n                    <IconButton onClick = {handleClickTrash}>\n                      <RestoreFromTrashIcon />\n                    </IconButton>\n                  </Tooltip>\n\n                  <Tooltip title=\"Delete\" aria-label=\"Delete\">\n                    <IconButton onClick = {handleClickDelete}>\n                      <DeleteForeverIcon />\n                   </IconButton>\n                  </Tooltip>\n                  </>\n                }\n           \n                <Tooltip title=\"Mark as unread\" aria-label=\"Mark as unread\">\n                  <IconButton onClick = {handleClickUnRead}>\n                      <EmailIcon />\n                   </IconButton>\n                </Tooltip> \n               \n              \n                </div>\n\n                <div className=\"mail_toolsRight\">\n              \n                </div>\n            </div>\n            <div className=\"mail_body\">\n                <div className=\"mail_bodyHeader\">\n                    <h2>{mail.subject}</h2> \n                    <LabelImportantIcon className=\"mail_important\" />\n                    <p>{mail.from}</p>\n                    <p className=\"mail_time\">{moment(mail.created).format('MM/DD/YYYY')}</p>\n                </div>\n\n                <div className=\"mail_message\">\n                    {parse(mail.html)}\n            </div>\n        </div>\n        </div>\n    )\n}\n\nexport default MailPage;","import { useRef } from 'react';\r\nimport './ComposeMail.css';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button } from '@material-ui/core';\r\nimport { useForm } from 'react-hook-form';\r\n\r\n\r\nimport 'froala-editor/css/froala_style.min.css';\r\nimport 'froala-editor/css/froala_editor.pkgd.min.css';\r\nimport 'froala-editor/js/froala_editor.pkgd.min.js';\r\n\r\nimport FroalaEditor from 'react-froala-wysiwyg';\r\nimport { useActions } from '../hooks/use-actions';\r\nimport { ContactsOutlined } from '@material-ui/icons';\r\n\r\n\r\n\r\nconst ComposeMail = () => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n\r\n    const html = useRef('');\r\n    const {closeComposeMail} = useActions();\r\n    \r\n    \r\n    \r\n    const {sendMail} = useActions();\r\n    \r\n\r\n\r\n    const onSubmit = (data:any) => {\r\n       data.to = [data.to];\r\n       data.html = html.current;\r\n       sendMail(data);\r\n       closeComposeMail();\r\n    };\r\n\r\n    const onChange = (data:any) => {\r\n      html.current = data;\r\n   };\r\n\r\n   \r\n\r\n  \r\n\r\n    return (\r\n        <div className=\"sendMail\">\r\n            <div className=\"sendMail_header\">\r\n                <h3>New Message</h3>\r\n                <CloseIcon className=\"sendMail_close\" onClick={closeComposeMail} />\r\n            </div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <input name=\"to\" type=\"email\" placeholder=\"To\" ref={register({required: true})} />\r\n                <input name=\"subject\" type=\"text\" placeholder=\"Subject\" ref={register()} />\r\n                  \r\n            <FroalaEditor\r\n              config={{\r\n                attribution: false,\r\n                height: 300,\r\n                quickInsertTags: ['p', 'div'],\r\n                listAdvancedTypes: true\r\n              }}\r\n              onModelChange={onChange}\r\n                /> \r\n                <div className=\"sendMail_options\">\r\n                    <Button type=\"submit\" className=\"sendMail_send\" variant=\"contained\" color=\"primary\">Send</Button>\r\n                </div>\r\n            </form>\r\n\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComposeMail;","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from 'react-router-dom';\r\nimport { makeStyles as makeStyles2, useTheme } from \"@material-ui/core/styles\";\r\nimport makeStyles from './styles';\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"./MyAppBar\";\r\nimport MailList from \"./MailList\";\r\nimport SideMenu from \"./SideMenu\";\r\nimport MailPage from \"./MailPage\";\r\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\r\nimport ComposeMail from \"./ComposeMail\";\r\nimport { stat } from \"node:fs\";\r\nimport { useActions } from \"../hooks/use-actions\";\r\n\r\nconst drawerWidth = 200;\r\n\r\nconst useStyles2 = makeStyles2((theme) => {\r\n  const drawerWithClose = theme.spacing(7) + 1;\r\n\r\n  return {\r\n    root: {\r\n      display: \"flex\"\r\n    },\r\n    appBar: {\r\n      \r\n      width: `calc(100% - ${drawerWithClose}px)`,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen\r\n      })\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen\r\n      })\r\n    },\r\n    menuButton: {\r\n      marginRight: 36\r\n    },\r\n    hide: {\r\n      display: \"none\"\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: \"nowrap\"\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen\r\n      })\r\n    },\r\n\r\n    drawerClose: {\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen\r\n      }),\r\n      overflowX: \"hidden\",\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: drawerWithClose\r\n      }\r\n    },\r\n    toolbar: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3)\r\n    }\r\n  };\r\n});\r\n\r\nconst List = () => {\r\n  \r\n  const composeMail = useTypedSelector(state =>  state.control?.composeMailOpen);\r\n\r\n\r\n  return <div>        \r\n    \r\n    <Switch>\r\n  <Route path=\"/mail/:location\" exact component ={MailList}> \r\n  \r\n  </Route>\r\n  \r\n  \r\n  <Route path=\"/mail/:location/:mailID\"  component={MailPage}>\r\n  </Route>\r\n  \r\n  <Route path=\"/\" >\r\n  <Redirect to=\"/mail/inbox\"/>\r\n  </Route>\r\n  </Switch>\r\n  {composeMail && <ComposeMail/>}\r\n  \r\n  </div>\r\n\r\n}\r\n\r\nconst Plist = React.memo(List);\r\n\r\nconst PureMailList = React.memo(MailList);\r\n\r\nconst useStyles = makeStyles();\r\n\r\nconst Mail = (props : any) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n\r\n\r\n\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n       \r\n      <CssBaseline />\r\n\r\n      <AppBar/>\r\n\r\n      <SideMenu/>\r\n      \r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar}/>\r\n       \r\n        <Plist/>\r\n\r\n      \r\n      </main>\r\n    \r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Mail;\r\n","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link } from 'react-router-dom';\r\nimport { registerServer } from '../helpers/user';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link  to={'/'} style={{ textDecoration: 'none' , color: \"inherit\" }}>\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [singUpUsername, setSingUpUsername] = useState(\"\");\r\n  const [singUpPassword, setSingUpnPassword] = useState(\"\");\r\n  const [singUpPasswordConfirm, setSingUpPasswordConfirm] = useState(\"\");\r\n\r\n  const [singUpUsernameError, setSingUpUsernameError] = useState(undefined);\r\n  const [singUpPasswordError, setSingUpnPasswordError] = useState(undefined );\r\n  const [singUpPasswordConfirmError, setSingUpPasswordConfirmError] = useState(undefined);\r\n\r\n  const signUpOnServer = async (e:React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const errors = (await registerServer(singUpUsername, singUpPassword, singUpPasswordConfirm)).data;\r\n    console.log(errors);\r\n    \r\n    if(errors.length){\r\n    setSingUpUsernameError(errors.find((e: {param: string}) => e.param === \"username\")?.msg )\r\n    setSingUpnPasswordError(errors.find((e: {param: string}) => e.param === \"password\")?.msg )\r\n    setSingUpPasswordConfirmError(errors.find((e: {param: string}) => e.param === \"passwordConfirm\")?.msg )\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={signUpOnServer}>\r\n          <Grid container spacing={2}>\r\n \r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"User Name\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                onChange = {e => setSingUpUsername(e.target.value)}\r\n                helperText= {singUpUsernameError}\r\n                error = {singUpUsernameError ? true : false}\r\n              />\r\n                </Grid>\r\n         \r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange = {e => setSingUpnPassword(e.target.value)}\r\n                helperText= {singUpPasswordError}\r\n                error = {singUpPasswordError ? true : false}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password-confirm\"\r\n                label=\"password confirm\"\r\n                type=\"password\"\r\n                id=\"password-confirm\"\r\n                autoComplete=\"current-password\"\r\n                onChange = {e => setSingUpPasswordConfirm(e.target.value)}\r\n                helperText= {singUpPasswordConfirmError}\r\n                error = {singUpPasswordConfirmError ? true : false}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n            <Link  to={'/login'} style={{ textDecoration: 'none' , color: \"inherit\" }}>\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useActions } from '../hooks/use-actions';\r\nimport { useTypedSelector } from '../hooks/use-typed-selector';\r\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link  to={'/'} style={{ textDecoration: 'none' , color: \"inherit\" }}>\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  alert:{\r\n    marginBottom:0,\r\n    marginRight: 10,\r\n    marginTop: 20,\r\n    minHeight: 0,\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    padding: \"9px 12px 9px 20px\",\r\n    borderWidth: \"1px 1px 1px 0px\",\r\n    borderStyle: \"solid\",\r\n    borderRadius: 6,\r\n    fontSize: 14,\r\n    lineHeight: 3,\r\n    color: \"rgb(143, 34, 27)\",\r\n    borderColor: \"rgb(249, 211, 197) rgb(249, 211, 197) rgb(249, 211, 197) rgb(207, 74, 34)\",\r\n    backgroundColor: \"rgb(252, 235, 226)\",\r\n  },\r\n  alertText:{\r\n \r\n  alignSelf: \"center\",\r\n  mozBoxFlex: 1,\r\n  flexGrow: 1,\r\n  marginLeft: 15,\r\n  marginRight: 10,\r\n  color: \"rgb(207, 74, 34)\",\r\n  }\r\n  \r\n\r\n}));\r\n\r\nconst SignIn = () => {\r\n  const classes = useStyles();\r\n  const {login , logout} = useActions();\r\n\r\n  const fail = useTypedSelector((state) => {\r\n    return state.user?.fail;\r\n   });\r\n\r\n  const [loginUsername, setLoginUsername] = useState(\"\");\r\n  const [loginPassword, setLoginPassword] = useState(\"\");\r\n  \r\n  const signInOnServer = (e:React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    login(loginUsername , loginPassword)\r\n\r\n    window.addEventListener('beforeunload', function (e) {\r\n      //e.preventDefault();\r\n     // logout();\r\n  });\r\n  }\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\" >\r\n          Sign in\r\n          </Typography>\r\n         {fail && <div role=\"alert\" className={classes.alert}  data-testid=\"bannerAuthCodeError\">\r\n         <WarningRoundedIcon style={{marginTop: 8}}/>\r\n            \r\n            <span className= {classes.alertText}>\r\n              Please provide a valid username and password.\r\n            </span>\r\n            \r\n            </div>}\r\n      \r\n        <form className={classes.form} noValidate onSubmit={signInOnServer}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"User Name\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            value = {loginUsername}\r\n            error={fail}\r\n            onChange = {e => setLoginUsername(e.target.value)}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value = {loginPassword}\r\n            error={fail}\r\n            onChange = {e => setLoginPassword(e.target.value)}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n           \r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n            <Link  to={'/login'} style={{ textDecoration: 'none' , color: \"inherit\" }}>\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n            <Link  to={'/signup'} style={{ textDecoration: 'none' , color: \"inherit\" }}>\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignIn;","import ReactDOM from 'react-dom';\r\nimport Mail from './Mail';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport SignUp from './SignUp';\r\nimport SignIn from './SignIn';\r\nimport { useActions } from '../hooks/use-actions';\r\nimport { useTypedSelector } from '../hooks/use-typed-selector';\r\nimport React from 'react';\r\nimport { ContactsOutlined } from '@material-ui/icons';\r\n\r\n\r\nconst PureMail = React.memo(Mail);\r\n\r\n\r\nconst App  = () => {\r\n  const [firstLoad, setFirstLoad] = useState(true);\r\n\r\n  const {getUser , fetchAllMail} = useActions();\r\n  \r\n\r\n  const username  = useTypedSelector((state) => {\r\n   // console.log(\"ERROR: \" + state.user?.username );\r\n    return state.user?.username \r\n  });\r\n\r\n  const loading = useTypedSelector((state) => {\r\n    return  state.user?.loading\r\n  });\r\n\r\n  const error = useTypedSelector((state) => {\r\n    \r\n    return  state.mail?.error\r\n  });\r\n\r\n\r\n  \r\n  \r\n  useEffect(() => {\r\n    if(username) \r\n    fetchAllMail();\r\n    else\r\n    getUser();\r\n\r\n  },[username]);\r\n\r\n    \r\n   if (username === undefined) return <></> \r\n   if (!username) {\r\n    return (\r\n    <div>\r\n    <Redirect to=\"/login\"/>\r\n    <Route path=\"/login\">\r\n    <SignIn />\r\n     </Route>\r\n\r\n  <Route path=\"/signup\">\r\n    <SignUp />\r\n  </Route>\r\n  </div>\r\n  )\r\n  } else \r\n  return (\r\n    \r\n      \r\n     \r\n        <Mail/>\r\n   \r\n\r\n     \r\n     \r\n  )\r\n\r\n  \r\n  }\r\n\r\nexport default App;\r\n","import './wdyr';\n\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { store } from './state';\nimport { Provider } from 'react-redux';\nimport { CookiesProvider } from 'react-cookie';\n\n\n\n\nconst T  = () => {\n  \n  return (\n  <Provider store={store}>\n   \n  < Router>\n     <App/>\n   </Router>\n  \n  </Provider>\n  );\n\n}\n\n\nReactDOM.render(<T/>, document.querySelector('#root'));\n\n\n","export enum ActionType {\n  TOGGLE_SIDEBAR = \"toggle_sideBar\",\n  OPEN_COMPOSE_MAIL = \"open_compose_mail\",\n  CLOSE_COMPOSE_MAIL = \"close_compose_mail\",\n  LOGIN = \"login\",\n  LOGIN_SUCCESS = 'login_success',\n  LOGIN_FAIL = 'login_fail',\n  LOGIN_ERROR = 'login_error',\n  GET_USER = \"get_user\",\n  GET_USER_COMPLETE = \"get_user_complete\",\n  GET_USER_ERROR = \"get_user_error\",\n  LOGOUT = \"logout\",\n  LOGOUT_COMPLETE = 'logout_complete',\n  LOGOUT_ERROR = 'logout_error',\n  FETCH_ALL_MAIL = 'fetch_inbox',\n  FETCH_ALL_MAIL_COMPLETE = 'fetch_all_mail_complete',\n  FETCH_ALL_MAIL_ERROR = 'fetch_inbox_error',\n  FETCH_INBOX = 'fetch_inbox',\n  FETCH_INBOX_COMPLETE = 'fetch_inbox_complete',\n  FETCH_INBOX_ERROR = 'fetch_inbox_error',\n  TOGGLE_STAR = \"toggle_star\",\n  TOGGLE_STAR_ERROR = 'toggle_star_error',\n  SEND_MAIL = \"send_mail\",\n  SEND_MAIL_COMPLETE = \"send_mail_complete\",\n  SEND_MAIL_ERROR = \"send_mail_error\",\n  SET_LOCATION = \"set_location\",\n  MARK_AS_READ = \"mark_as_read\",\n  MARK_AS_READ_ERROR = \"mark_as_read_error\",\n  TOGGLE_IS_TRASH = \"toggle_is_trash\",\n  TOGGLE_IS_TRASH_ERROR = 'toggle_is_trash_error',\n  DELETE_MAIL = \"delete_mail\",\n  DELETE_MAIL_ERROR = \"delete_mail_error\",\n  TOGGLE_MALI_CHECKBOX = \"toggle_mail_checkbox\",\n  TOGGLE_ALL_MALI_CHECKBOX = \"toggle_all_mail_checkbox\",\n}\n","import Axios from 'axios';\r\n\r\nconst localUrl = \"http://localhost:7777\"\r\nconst serverUrl = \"https://rabany-mail-backend.herokuapp.com\"\r\n\r\nconst url = serverUrl;\r\n\r\nexport const loginSever = (username: string , password: string) => {\r\n  return Axios({\r\n   method: \"POST\",\r\n   data: {\r\n     username,\r\n     password,\r\n   },\r\n   withCredentials: true,\r\n   url: url + \"/login\",\r\n});\r\n}\r\n\r\nexport const logoutServer = () => {\r\n return Axios({\r\n   method: \"GET\",\r\n   withCredentials: true,\r\n   url: url + \"/logout\",\r\n});\r\n}\r\n\r\nexport const getUserFromServer = () => {\r\nreturn Axios({\r\n   method: \"GET\",\r\n   withCredentials: true,\r\n   url: url + \"/user\",\r\n });\r\n}\r\n\r\nexport const registerServer = (username: string , password: string , passwordConfirm:string) => {\r\n  return Axios({\r\n   method: \"POST\",\r\n   data: {\r\n     username,\r\n     password,\r\n     passwordConfirm,\r\n   },\r\n   withCredentials: true,\r\n   url: url + \"/register\",\r\n});\r\n}"],"sourceRoot":""}